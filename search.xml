<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java系列之运算符</title>
      <link href="/2022/10/12/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2022/10/12/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>运算符：对字面量或者变量进行操作的符号</p><p>表达式：用运算符把字面量或者变量连接起来，符合java语法的式子就可以称为表达式，不同运算符连接的表达式体现的是不同类型的表达式</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>算术运算符</li><li>自增自减运算符</li><li>赋值运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>三元运算符</li><li>运算符优先级</li></ul><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><h3 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">3</span>+<span class="number">2</span>); <span class="comment">//5</span></span><br><span class="line">        <span class="comment">//如果在计算时有小数参与 结果可能不精确</span></span><br><span class="line">        System.out.println(<span class="number">1.1</span>+<span class="number">1.01</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="除和取模"><a href="#除和取模" class="headerlink" title="除和取模"></a>除和取模</h3><p>除</p><p>注意：整数与整数计算只能得到整数  想要取到小数则需要两边任意一个为小数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">4</span> / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">3</span> / <span class="number">2</span>); <span class="comment">//1</span></span><br><span class="line">        Sydtem.out.println(<span class="number">3.0</span> / <span class="number">2</span>);<span class="comment">//1.5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模  取模、取余实际上也是做除法运算  只不过得到的是余数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">4</span> % <span class="number">2</span>); <span class="comment">//0</span></span><br><span class="line">        System.out.println(<span class="number">5</span> % <span class="number">3</span>); <span class="comment">//2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>数组拆分：键盘录入三个数，将其拆分为个位、十位、百位后，打印在控制台</p><p>公式总结：</p><ul><li>个位：数值 % 10</li><li>十位：数值  &#x2F; 10 % 10</li><li>百位：数值 &#x2F; 100 % 10</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个三位数:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span> number / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">        System.out.println(ge);</span><br><span class="line">        System.out.println(shi);</span><br><span class="line">        System.out.println(bai);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><p>类型转换的分类</p><ul><li>隐式转换（自动类型提升）：取值范围小的数值 转换成 取值范围大的数值</li><li>强制转换：取值范围大的数值 转换成 取值范围小的数值</li></ul><p>隐式转换</p><p>隐式转换范例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> a; <span class="comment">//值提升到了 10.0</span></span><br></pre></td></tr></table></figure><p>隐式转换小结：</p><ul><li>取值范围：byte &lt; short &lt; int &lt; long &lt; float &lt; double</li><li>什么时候需要转换：数据类型不一样 不能进行计算  需要转换成一样的才可以进行计算</li><li>取值范围小的 和取值范围大的进行运算 小的会先提升为大的数据类型 再进行运算</li><li>byte short char 三种类型的数据在运算的时候 都会直接先提升为 int 然后再进行运算</li></ul><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><p>请问最终的运算结果是什么类型的？</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">数据类型 result = b1 + b2; <span class="comment">//int类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">20.0</span>;</span><br><span class="line">数据类型 result = i + n + d;<span class="comment">//i + n 的类型是long  （i + n) + d 的类型是double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line">数据类型 result = b + s + n；<span class="comment">//int + long = long</span></span><br></pre></td></tr></table></figure><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><ul><li>如果把一个取值范围大的数值  赋值给取值范围小的变量  是不允许直接赋值的  如果一定要这样做就需要加入强制转换</li><li>格式：目标数据类型 变量名 &#x3D; (目标数据类型) 被强制转换的数据</li></ul><p>范例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>) a;</span><br></pre></td></tr></table></figure><p>练习：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> b1 + b2;</span><br><span class="line">System.out.println(result); <span class="comment">//30</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> (<span class="type">byte</span>) (b1 + b2);</span><br><span class="line">System.out.println(result); <span class="comment">//30</span></span><br></pre></td></tr></table></figure><h3 id="字符串和字符的加操作"><a href="#字符串和字符的加操作" class="headerlink" title="字符串和字符的加操作"></a>字符串和字符的加操作</h3><p>字符串的“+”操作</p><ul><li>当“+”操作中出现字符串是  这个“+”是字符串连接符  会把前后数据进行拼接  产生一个新字符串</li><li>连续进行“+”操作时  从左到右逐个执行</li></ul><p>字符的“+”操作</p><ul><li>当“字符 + 字符”时会把字符通过ASCII码表查询到对应的数字再进行计算</li><li>当“字符 + 数字”时会把字符通过ASCII码表查询到对应的数字再进行计算</li></ul><p>注意单引号跟双引号：两个双引号字符相加就是拼接  两个单引号字符相加就是返回ASCII码  一边单一边双也是aa</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;a&quot;</span> + <span class="string">&quot;a&quot;</span>);  <span class="comment">//aa</span></span><br><span class="line">System.out.println(<span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;a&#x27;</span>);  <span class="comment">//194</span></span><br><span class="line">System.out.println(<span class="string">&quot;a&quot;</span> + <span class="string">&#x27;a&#x27;</span>);  <span class="comment">//aa</span></span><br></pre></td></tr></table></figure><h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><p>基本用法</p><p>++或–  放到前面就是前置运算符  放到后面就是后置运算符</p><p>前置运算符：先返回值 再自加1</p><p>后置运算符：先自加1 再返回值</p><p>++或–  无论放在变量前面或者后面  单独写一行结果都是一样的</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">++</td><td align="center">自加</td><td align="center">变量的值加1</td></tr><tr><td align="center">–</td><td align="center">自减</td><td align="center">变量的值减1</td></tr></tbody></table><h2 id="关系运算符练习"><a href="#关系运算符练习" class="headerlink" title="关系运算符练习"></a>关系运算符练习</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的时髦度：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入相亲对象的时髦度：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> num1 &gt; num2;</span><br><span class="line"></span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>^  逻辑异或：相同为false，不同为true</p><h2 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h2><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">短路与</td><td align="center">结果和&amp;一样  但是具有短路效果</td></tr><tr><td align="center">||</td><td align="center">短路或</td><td align="center">结果和||一样  但是具有短路效果</td></tr></tbody></table><h2 id="三元运算符和运算符的优先级"><a href="#三元运算符和运算符的优先级" class="headerlink" title="三元运算符和运算符的优先级"></a>三元运算符和运算符的优先级</h2><p>格式：关系表达式?表达式1:表达式;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a &gt; b?a:b;</span><br></pre></td></tr></table></figure><p>判断两只老虎体重是否相同</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> num1 == num2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不同&quot;</span>;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
