<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java系列之面向对象</title>
      <link href="/2022/10/19/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/10/19/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="设计对象并使用"><a href="#设计对象并使用" class="headerlink" title="设计对象并使用"></a>设计对象并使用</h2><h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><ul><li>类（设计图）：是对象共同特征的描述</li><li>对象：是真实存在的具体东西</li></ul><p>在Java中  必须先设计类  才能获得对象</p><p>如何定义类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">    <span class="comment">//创建手机的对象</span></span><br><span class="line">    <span class="type">practice2</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">practice2</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给手机赋值</span></span><br><span class="line">    p.brand = <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">    p.price = <span class="number">1999.98</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取手机对象中的值</span></span><br><span class="line">    System.out.println(p.brand);</span><br><span class="line">    System.out.println(p.price);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p.call();</span><br><span class="line">    p.game();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>负责定义类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice2</span> &#123;</span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">double</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打电话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">game</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玩游戏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何得到对象：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pulic class 类名 &#123;</span><br><span class="line"><span class="number">1.</span>成员变量（代表属性的  一般是名词）</span><br><span class="line"><span class="number">2.</span>成员方法（代表行为的  一般是动词）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类名  对象 名  = <span class="keyword">new</span>  类名();</span><br></pre></td></tr></table></figure><p>如何使用对象：</p><ul><li>访问属性：对象名.成员变量</li><li>访问行为：对象名.方法名()</li></ul><h3 id="类的几个补充注意事件"><a href="#类的几个补充注意事件" class="headerlink" title="类的几个补充注意事件"></a>类的几个补充注意事件</h3><p>定义类的补充注意事项</p><p>用来描述一类事物的类  专业叫做：Javabean类  在Javaban类中  是不写main方法的</p><p>在以前  编写main方法的类  叫做测试类  我们可以在测试类中创建javabean类的对象并进行赋值</p><ul><li>一个java文件中可以写多个类  且只能一个类是public修饰  而且public修饰的类名必须成为代码文件名  实际开发中简易还是一个文件定义一个class类</li><li>成员变量的完整格式是：修饰符  数据类型  变量名称 &#x3D; 初始化值;一般无需指定初始化值  存在默认值</li></ul><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>女朋友类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">    <span class="type">practice2</span> <span class="variable">pgridea</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">practice2</span>();</span><br><span class="line"></span><br><span class="line">    pgridea.name = <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">    pgridea.age = <span class="number">19</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(pgridea.name);</span><br><span class="line">    System.out.println(pgridea.age);</span><br><span class="line"></span><br><span class="line">    pgridea.playGame();</span><br><span class="line">    pgridea.sleep();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">playGame</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;一起玩游戏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;一起睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>对象代表什么  就得封装对应的数据  并提供数据对应的行为</p><h3 id="private关键字（私有）"><a href="#private关键字（私有）" class="headerlink" title="private关键字（私有）"></a>private关键字（私有）</h3><ul><li>private是一个限权限修饰符</li><li>可以修饰成员（成员变量和成员方法）</li><li>被private修饰的成员只能在本类中才能访问</li><li>针对private修饰的成员变量  如果需要被其它类使用  则需要提供相应的操作</li><li>提供”setXxx(参数)”方法  用于给成员变量赋值  方法用public修饰</li><li>提供“getXxx（参数）”方法  用于获取成员变量的值  方法用public修饰</li></ul><p>public(公共的)  private(私有的)</p><p>针对每一个私有化的成员变量  都要提供get和set方法</p><p>set放发  给成员变量赋值</p><p>get方法  对外传输结果</p>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建手机的对象</span></span><br><span class="line">        <span class="type">Text2</span> <span class="variable">pgridea</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给手机赋值</span></span><br><span class="line">        pgridea.setAge(<span class="number">18</span>);  <span class="comment">//添加私有后手机的值写到括号里面  对象名+方法名+括号</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取手机对象中的值</span></span><br><span class="line">        System.out.println(pgridea.getAge());</span><br><span class="line">        <span class="comment">//对象名+方法名+括号</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;  <span class="comment">//给age添加了私有修饰符</span></span><br><span class="line"><span class="comment">//对传进来的数据进行过滤判断</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123; <span class="comment">//把Textl里面的值赋值给a进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (a &gt;= <span class="number">18</span> &amp;&amp; a &lt;= <span class="number">50</span>) &#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;非法数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123; <span class="comment">//对外提供age变量的值</span></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="This关键字"><a href="#This关键字" class="headerlink" title="This关键字"></a>This关键字</h2><p>this可以区别成员变量和局部变量</p><p>就近原则</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text3</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(age);<span class="comment">//谁近用谁</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.age);<span class="comment">//打印的是private int age里面的值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><p>构造方法概述</p><p>构造方法也叫做构造器、构造函数</p><p>作用：在创建对象的时候给成员变量进行赋值的</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="type">student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>(); <span class="comment">//代表调用的是空参的构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>构造方法的格式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line">修饰符 类名(参数) &#123;</span><br><span class="line">方法体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>特点：</p><ul><li>方法名与类名相同  大小写也一致</li><li>没有返回值类型  连void也没有</li><li>没有具体的返回值（不能由return带回结果数据）</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text3</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//代表空参构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student1</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="comment">//代表带全部参数的构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行时机</p><ul><li>创建对象的时候由虚拟机调用  不能手动去调用构造方法</li><li>每创建一次对象  就会调用一次方法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="comment">//在创建对象时进行赋值</span></span><br><span class="line">        <span class="type">Text2</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">19</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(a.getName());</span><br><span class="line">        System.out.println(a.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造方法注意事项</p><p>构造方法的定义：</p><ul><li>如果没有定义构造方法  系统将给出一个默认的无参构造方法</li><li>如果定义了构造方法  系统将不再提供默认的构造方法</li></ul><p>构造方法的重载</p><ul><li>带参构造方法  和无参构造方法  两者方法名相同  这叫做构造方法的重载</li></ul><p>推荐的使用方法</p><ul><li>无论是否使用  都手动书写无参数构造方法  和带全部参数的构造方法</li></ul><p>总结:</p><p>构造方法的作用</p><ul><li>创建对象的时候  由虚拟机自动调用  给成员变量进行初始化的</li></ul><p>构造方法有几种</p><ul><li>无参数构造方法：初始化的对象时  成员变量的数据均采用默认值</li><li>有参数构造方法：在初始化对象的时候  同时可以为对象进行赋值</li></ul><p>构造方法有哪些注意事项</p><ul><li>任何类定义出来  默认就自带了无参数构造器  写不写都有</li><li>一旦定义了参数构造器  无参数构造器就没有了  此时就需要自己写无参数构造器了</li><li>建议在任何时候都手动写上空参和带全部参数的构造方法</li></ul><h2 id="标准JavaBen"><a href="#标准JavaBen" class="headerlink" title="标准JavaBen"></a>标准JavaBen</h2><p>1.类名需要见名知意</p><p>2.成员变量使用private修饰</p><p>3.提供至少两个构造方法</p><ul><li>无参构造方法</li><li>带全部参数的构造方法</li></ul><p>4.成员方法</p><ul><li>提供每一个成员变量对应的setXxxx&#x2F;getXxxx</li><li>如果还有其它行为  也需要写上</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Input</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">Date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;Miter&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;1431215326@qq.com&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Date.getusername());</span><br><span class="line">        System.out.println(Date.getPassword());</span><br><span class="line">        System.out.println(Date.getemall());</span><br><span class="line">        System.out.println(Date.getgender());</span><br><span class="line">        System.out.println(Date.getage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String emall;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//空参</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//带全部参数的构造</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password, String emall, String gender, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.emall = emall;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getusername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setpawors</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getemall</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emall;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setemall</span><span class="params">(String emall)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emall = emall;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getgender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setgender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setage</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &gt;= <span class="number">18</span> &amp;&amp; a &lt;= <span class="number">60</span>) &#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向对象综合练习"><a href="#面向对象综合练习" class="headerlink" title="面向对象综合练习"></a>面向对象综合练习</h2><h3 id="案例：文字格斗游戏"><a href="#案例：文字格斗游戏" class="headerlink" title="案例：文字格斗游戏"></a>案例：文字格斗游戏</h3><p>格斗游戏  每个游戏角色的姓名 血量  都不同  在选定人物的时候（new  对象的时候）  这些信息就应该被确定下来</p><p>姓名：乔峰</p><p>血量：100</p><p>姓名：鸠摩智</p><p>血量：100</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">gameText</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建第一个角色</span></span><br><span class="line">        <span class="type">Role</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;乔峰&quot;</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">//创建第二个角色</span></span><br><span class="line">        <span class="type">Role</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;鸠摩智&quot;</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始格斗  回合制游戏</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            r1.attack(r2);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (r2.getBlood() == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(r1.getName() + <span class="string">&quot;K.O&quot;</span> + r2.getName());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            r2.attack(r1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (r1.getBlood() == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(r2.getName() + <span class="string">&quot;K.O&quot;</span> + r1.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> blood;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Role</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Role</span><span class="params">(String name, <span class="type">int</span> blood)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.blood = blood;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBlood</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> blood;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBlood</span><span class="params">(<span class="type">int</span> blood)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.blood = blood;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法用于攻击别人</span></span><br><span class="line">    <span class="comment">//Role r1 = new Role();</span></span><br><span class="line">    <span class="comment">//Role r2 = new Role();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//r1攻击r2</span></span><br><span class="line">    <span class="comment">//方法的调用者攻击参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attack</span><span class="params">(Role role)</span> &#123;</span><br><span class="line">        <span class="comment">//计算造成的伤害</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">hurt</span> <span class="operator">=</span> r.nextInt(<span class="number">20</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算剩下的血</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">remainBlood</span> <span class="operator">=</span> role.getBlood() - hurt;</span><br><span class="line">        <span class="comment">//如果为负数就修改为0</span></span><br><span class="line">        remainBlood = remainBlood &lt; <span class="number">0</span> ? <span class="number">0</span> : remainBlood;</span><br><span class="line"></span><br><span class="line">        role.setBlood(remainBlood);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//this表示方法的调用者</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;举起拳头，打了&quot;</span> + role.getName() + <span class="string">&quot;一下，造成了&quot;</span> + hurt + <span class="string">&quot;点伤害，&quot;</span> + role.getName() + <span class="string">&quot;还剩下&quot;</span> + remainBlood + <span class="string">&quot;点血&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象数组练习1"><a href="#对象数组练习1" class="headerlink" title="对象数组练习1"></a>对象数组练习1</h3><p>定义一个数组存储3个商品对象</p><p>商品属性：商品的ID、名字、价格、库存</p><p>创建三个商品对象  并把商品对象存储到数组中</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个数组</span></span><br><span class="line">        Text2[] arr = <span class="keyword">new</span> <span class="title class_">Text2</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个商品对象</span></span><br><span class="line">        <span class="type">Text2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;001&quot;</span>, <span class="string">&quot;华为&quot;</span>, <span class="number">5999</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="type">Text2</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;002&quot;</span>, <span class="string">&quot;保温杯&quot;</span>, <span class="number">10</span>, <span class="number">33</span>);</span><br><span class="line">        <span class="type">Text2</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;003&quot;</span>, <span class="string">&quot;枸杞&quot;</span>, <span class="number">50</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把商品添加到数组中</span></span><br><span class="line">        arr[<span class="number">0</span>] = t1;</span><br><span class="line">        arr[<span class="number">1</span>] = t2;</span><br><span class="line">        arr[<span class="number">2</span>] = t3;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Text2</span> <span class="variable">a</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            System.out.println(a.getId() + <span class="string">&quot;,&quot;</span> + a.getName() + <span class="string">&quot;,&quot;</span> + a.getPrice() + <span class="string">&quot;,&quot;</span> + a.getCount());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> price;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">(String id, String name, <span class="type">double</span> price, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">        <span class="built_in">this</span>.count = count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCount</span><span class="params">(<span class="type">int</span> count)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.count = count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象数组练习2"><a href="#对象数组练习2" class="headerlink" title="对象数组练习2"></a>对象数组练习2</h3><p>定义数组存储3部汽车对象</p><p>汽车的属性：品牌、价格、颜色</p><p>创建三个汽车对象  数据通过键盘录入而来 并把数据存入到数组中</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个数组用来存储三个汽车对象</span></span><br><span class="line">        Text2[] arr = <span class="keyword">new</span> <span class="title class_">Text2</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建汽车对象  数据来自键盘输入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//创建汽车对象</span></span><br><span class="line">            <span class="type">Text2</span> <span class="variable">car</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(); <span class="comment">//一定要放在循环里面</span></span><br><span class="line">            <span class="comment">//录入品牌</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入汽车的品牌：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">brand</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            car.setBrand(brand);</span><br><span class="line">            <span class="comment">//录入价格</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入汽车的价格：&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">price</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            car.setPrice(price);</span><br><span class="line">            <span class="comment">//录入颜色</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入汽车的颜色：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">color</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            car.setColor(color);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//把汽车对象添加到数组里面</span></span><br><span class="line">            arr[i] = car;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Text2</span> <span class="variable">car</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            System.out.println(car.getBrand() + car.getPrice() + car.getColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String brand;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> price;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">(String brand, <span class="type">int</span> price, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> brand</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> price</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> price</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">int</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> color</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getColor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> color</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setColor</span><span class="params">(String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象数组练习3"><a href="#对象数组练习3" class="headerlink" title="对象数组练习3"></a>对象数组练习3</h3><p>定义数组存储三部手机对象</p><p>手机的属性：品牌、价格、颜色</p><p>要求  计算出三部手机的平均价格</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] ages)</span> &#123;</span><br><span class="line">        <span class="comment">//创建数组</span></span><br><span class="line">        Text2[] arr = <span class="keyword">new</span> <span class="title class_">Text2</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">Text2</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;小米&quot;</span>, <span class="number">1999</span>, <span class="string">&quot;白色&quot;</span>);</span><br><span class="line">        <span class="type">Text2</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;红米&quot;</span>, <span class="number">1999</span>, <span class="string">&quot;黑色&quot;</span>);</span><br><span class="line">        <span class="type">Text2</span> <span class="variable">p3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text2</span>(<span class="string">&quot;黑米&quot;</span>, <span class="number">1999</span>, <span class="string">&quot;好色&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把手机添加到数组中</span></span><br><span class="line">        arr[<span class="number">0</span>] = p1;</span><br><span class="line">        arr[<span class="number">1</span>] = p2;</span><br><span class="line">        arr[<span class="number">2</span>] = p3;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取三部手机的平均价格</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Text2</span> <span class="variable">phone</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            sum = sum + phone.getPrice();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//平均值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">avg</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line"></span><br><span class="line">        System.out.println(avg);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String brand;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> price;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Text2</span><span class="params">(String brand, <span class="type">int</span> price, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> brand</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> price</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> price</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">int</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> color</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getColor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> color</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setColor</span><span class="params">(String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象数组练习4"><a href="#对象数组练习4" class="headerlink" title="对象数组练习4"></a>对象数组练习4</h3><p>定义数组存储4个女朋友的对象</p><p>女朋友的属性：姓名、年龄、性别、爱好</p><p>要求1：计算出四个女朋友的平均年龄</p><p>要求2：统计年龄比平均值低的女朋友有几个  并把它们的所有信息打印出来</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GirlFriendText</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义数组用来存储女朋友对象</span></span><br><span class="line">        GirlFriend[] arr = <span class="keyword">new</span> <span class="title class_">GirlFriend</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建女朋友类</span></span><br><span class="line">        <span class="type">GirlFriend</span> <span class="variable">bfm1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;玫瑰&quot;</span>, <span class="number">23</span>, <span class="string">&quot;女&quot;</span>, <span class="string">&quot;吃美食&quot;</span>);</span><br><span class="line">        <span class="type">GirlFriend</span> <span class="variable">bfm2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;宫水理惠子&quot;</span>, <span class="number">20</span>, <span class="string">&quot;女&quot;</span>, <span class="string">&quot;看樱花&quot;</span>);</span><br><span class="line">        <span class="type">GirlFriend</span> <span class="variable">bfm3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;风铃&quot;</span>, <span class="number">18</span>, <span class="string">&quot;女&quot;</span>, <span class="string">&quot;打游戏&quot;</span>);</span><br><span class="line">        <span class="type">GirlFriend</span> <span class="variable">bfm4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;合欢&quot;</span>, <span class="number">19</span>, <span class="string">&quot;女&quot;</span>, <span class="string">&quot;喝奶茶&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把对象存入数组中</span></span><br><span class="line">        arr[<span class="number">0</span>] = bfm1;</span><br><span class="line">        arr[<span class="number">1</span>] = bfm2;</span><br><span class="line">        arr[<span class="number">2</span>] = bfm3;</span><br><span class="line">        arr[<span class="number">3</span>] = bfm4;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">GirlFriend</span> <span class="variable">gf</span> <span class="operator">=</span> arr[i];</span><br><span class="line"></span><br><span class="line">            sum = sum + gf.getAge();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//求平均数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">avg</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算年龄低于平均值的有几个 并打印她们的信息</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">GirlFriend</span> <span class="variable">gf</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="keyword">if</span> (gf.getAge() &lt; avg) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                System.out.println(gf.getName() + gf.getAge() + gf.getGender() + gf.getHobby());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">                System.out.println(count + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GirlFriend</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String hobby;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GirlFriend</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GirlFriend</span><span class="params">(String name, <span class="type">int</span> age, String gender, String hobby)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.hobby = hobby;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHobby</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hobby;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHobby</span><span class="params">(String hobby)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hobby = hobby;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂对象数组练习5"><a href="#复杂对象数组练习5" class="headerlink" title="复杂对象数组练习5"></a>复杂对象数组练习5</h3><p>定义一个长度为3的数组  数组存储1~3名学生对象作为初始数据  学生的学号、姓名各部相同</p><p>学生的属性：学号、姓名、年龄</p><p>要求1：再次添加一个学生对象  并在添加的时候进行学号唯一性判断</p><p>要求2；添加完毕之后  遍历所有学生信息</p><p>要求3：通过id删除学生的信息</p><p>如果存在  则删除  如果不存在  则提示删除失败</p><p>要求4：删除完毕之后  遍历所有学生的信息</p><p>要求5：查询数组id为“heima002”的学生如果存在  则将他的年龄+1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentText</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个数组进行存储学生对象</span></span><br><span class="line">        Student[] arr = <span class="keyword">new</span> <span class="title class_">Student</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建学生对象并添加到数组</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">st1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">1</span>, <span class="string">&quot;宫水理慧子&quot;</span>, <span class="number">19</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">st2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">2</span>, <span class="string">&quot;玫瑰&quot;</span>, <span class="number">23</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">st3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">3</span>, <span class="string">&quot;风铃&quot;</span>, <span class="number">17</span>);</span><br><span class="line">        arr[<span class="number">0</span>] = st1;</span><br><span class="line">        arr[<span class="number">1</span>] = st2;</span><br><span class="line">        arr[<span class="number">2</span>] = st3;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//要求1：再次添加一个学生对象  并在添加的时候进行学号唯一性判断</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">st4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">4</span>, <span class="string">&quot;合欢&quot;</span>, <span class="number">19</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//唯一性判断</span></span><br><span class="line">        <span class="comment">//情况1：存在  那就不用添加</span></span><br><span class="line">        <span class="comment">//情况2：不存在  那就把学生对象添加进数组</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> contains(arr, st4.getId()); <span class="comment">//不存在则返回false</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="comment">//已存在</span></span><br><span class="line">            System.out.println(<span class="string">&quot;当前id重复，请修改id后再进行添加&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//不存在  则添加</span></span><br><span class="line">            <span class="comment">//把st4添加到数组当中</span></span><br><span class="line">            <span class="comment">//情况1：数组已满  那就重新创建一个数组  新数组的长度 = 老数组 + 1</span></span><br><span class="line">            <span class="comment">//情况2：数组没有满  直接添加</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> getCount(arr);</span><br><span class="line">            <span class="keyword">if</span> (count == arr.length) &#123;</span><br><span class="line">                <span class="comment">//已经存满</span></span><br><span class="line">                <span class="comment">//创建一个数组 长度 = 老数组 + 1</span></span><br><span class="line">                <span class="comment">//然后把老数组的元素  添加到新数组里面</span></span><br><span class="line">                Student[] newArr = creatNewArr(arr);</span><br><span class="line">                <span class="comment">//把需要添加的元素添加进去</span></span><br><span class="line">                newArr[count] = st4;</span><br><span class="line">                <span class="comment">//要求2：添加完毕后  遍历所有学生信息</span></span><br><span class="line">                printArr(newArr);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//没有存满</span></span><br><span class="line">                <span class="comment">//getCount获取到的是2，表示数组当中已经有了两个元素</span></span><br><span class="line">                <span class="comment">//还有一个意思  如果下一次要添加数据  就是添加到2索引的位置</span></span><br><span class="line">                arr[count] = st4;</span><br><span class="line">                <span class="comment">//要求2：添加完毕后  遍历所有学生信息</span></span><br><span class="line">                printArr(arr);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">///要求3：通过id删除学生信息</span></span><br><span class="line">        <span class="comment">//如果id存在则删除</span></span><br><span class="line">        <span class="comment">//如果不存在则提示删除失败</span></span><br><span class="line"><span class="comment">//        int index = getIndex(arr, 3);</span></span><br><span class="line"><span class="comment">//        if (index &gt;= 0) &#123;</span></span><br><span class="line"><span class="comment">//            //存在</span></span><br><span class="line"><span class="comment">//            arr[index] = null;</span></span><br><span class="line"><span class="comment">//            //遍历数组</span></span><br><span class="line"><span class="comment">//            printArr(arr);</span></span><br><span class="line"><span class="comment">//        &#125; else &#123;</span></span><br><span class="line"><span class="comment">//            //不存在</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;当前id不存在删除失败&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//找到id在数组中的索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(Student[] arr, <span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">st</span> <span class="operator">=</span> arr[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (st != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">sid</span> <span class="operator">=</span> st.getId();</span><br><span class="line">                <span class="keyword">if</span> (sid == id) &#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//要求2：添加完毕后  遍历所有学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArr</span><span class="params">(Student[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="keyword">if</span> (stu != <span class="literal">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;ID：&quot;</span> + stu.getId() + <span class="string">&quot; &quot;</span> + <span class="string">&quot;姓名：&quot;</span> + stu.getName() + <span class="string">&quot; &quot;</span> + <span class="string">&quot;年龄：&quot;</span> + stu.getAge());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当数组存满后 创建一个新数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Student[] creatNewArr(Student[] arr) &#123;</span><br><span class="line">        <span class="comment">//创建一个数组 长度 = 老数组 + 1</span></span><br><span class="line">        <span class="comment">//然后把老数组的元素  添加到新数组里面</span></span><br><span class="line">        Student[] newArr = <span class="keyword">new</span> <span class="title class_">Student</span>[arr.length + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">//循环遍历得到老数组中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//把老数组中的元素添加到新数组里面</span></span><br><span class="line">            newArr[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newArr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断数组中当前存储了多少个元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">(Student[] arr)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个计数器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] != <span class="literal">null</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当循环结束之后  就知道数组当中一共有几个元素</span></span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.我要干什么？  进行唯一性判断</span></span><br><span class="line">    <span class="comment">//2.我干这件事需要什么才能完成？  数组 id</span></span><br><span class="line">    <span class="comment">//3.调用处是否需要继续使用方法的结果？  必须返回</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(Student[] arr, <span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="comment">//依次获取数组中的学生对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">st</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="keyword">if</span> (st != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//获取数组中学生对象的id</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">sid</span> <span class="operator">=</span> st.getId();</span><br><span class="line">                <span class="comment">//比较</span></span><br><span class="line">                <span class="keyword">if</span> (sid == id) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当循环结束之后  还没有找到一样的  那么就表示数组中要找的id是不存在的</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> id, String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java系列之方法</title>
      <link href="/2022/10/18/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%96%B9%E6%B3%95/"/>
      <url>/2022/10/18/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><p>Java方法是语句的集合，它们在一起执行一个功能</p><p>方法是解决一类问题的步骤的有序组合</p><p>方法包含于类或对象中</p><p>重复的代码、具有独立功能的代码可以抽取到方法中</p><p>方法的好处：可以提高代码的复用性，提高代码的可维护性</p><h2 id="方法的格式"><a href="#方法的格式" class="headerlink" title="方法的格式"></a>方法的格式</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">访问权限修饰符 其他修饰符 返回值类型 方法名称(参数列表) &#123;</span><br><span class="line"> <span class="comment">//方法体【函数体】 return 返回值；</span></span><br><span class="line"> <span class="comment">//如果返回值类型void ,可以不用写return </span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="方法的分类"><a href="#方法的分类" class="headerlink" title="方法的分类"></a>方法的分类</h2><ul><li>根据方法有没有参数,可分为:</li><li>1.无参方法</li><li>2.有参方法</li><li>根据有没有返回值，可分为：</li><li>1.无返回值方法</li><li>2.有返回值方法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//  1. 最简单的无参方法</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sum1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;加法操作&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    2. 拥有修饰符的无参方法 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sum2</span><span class="params">()</span>&#123; </span><br><span class="line">        System.out.println(<span class="string">&quot;加法操作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    3. 拥有参数的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sum3</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123; </span><br><span class="line">        System.out.println(<span class="string">&quot;两数相加结果&quot;</span>+a+b); </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    4.拥有返回值的方法 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum4</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//        5.声明一个无参数带返回值</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum5</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="number">20</span>; </span><br><span class="line">        <span class="type">int</span> y=<span class="number">28</span>; </span><br><span class="line">        <span class="type">int</span> z=x+y; </span><br><span class="line">        <span class="keyword">return</span> z; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的调用格式"><a href="#方法的调用格式" class="headerlink" title="方法的调用格式"></a>方法的调用格式</h2><ul><li>语法：方法名称(实参列表);</li><li>注意：<ul><li>a.实参的数量和类型必须和形参保持完全的一致。</li><li>b.方法之间只能进行相互的调用，而不能在方法中声明方法，就目前而言声明的方法都和main方法时并列的</li><li>c.如果定义方法有返回值，运算的结果会返回给调用者，调用者需要定义变量接收数据</li></ul></li></ul><p>无返回值：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//实参</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        swap(a,b);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;main函数中的a=&quot;</span> + a);<span class="comment">//10</span></span><br><span class="line">        System.out.println(<span class="string">&quot;main函数中的b=&quot;</span> + b);<span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分析：需要参数（两个参数）</span></span><br><span class="line">    <span class="comment">// 不需要返回值</span></span><br><span class="line">    <span class="comment">// 形参：没有携带值的变量，多个变量之间使用逗号分隔</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        temp = a;</span><br><span class="line">        a = b ;</span><br><span class="line">        b = temp ;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;swap函数中的a=&quot;</span> + a); <span class="comment">//20</span></span><br><span class="line">        System.out.println(<span class="string">&quot;swap函数中的b=&quot;</span> + b); <span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">swap函数中的a=<span class="number">20</span></span><br><span class="line">swap函数中的b=<span class="number">10</span></span><br><span class="line">main函数中的a=<span class="number">10</span></span><br><span class="line">main函数中的b=<span class="number">20</span></span><br></pre></td></tr></table></figure><p>有返回值的要用到return关键字</p><p>return关键字的作用：结束方法,返回结果</p><p>有方法返回值的案例</p><p>情况1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*1&gt;在没有返回值的函数中使用return </span></span><br><span class="line"><span class="comment">    return单独成立一条语句，</span></span><br><span class="line"><span class="comment">    类似于break或者continue，后面不能跟任何的数值 </span></span><br><span class="line"><span class="comment">    作用：结束整个方法 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//结束方法 &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不能执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!========&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>情况2</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> add(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*2&gt;在一个有返回值的函数中使用return </span></span><br><span class="line"><span class="comment">    这种情况下函数中必须出现return </span></span><br><span class="line"><span class="comment">    return后面必须跟一个具体的数值，而且数值的类型和返回值类型必须保持一致 </span></span><br><span class="line"><span class="comment">    作用：结束整个方法，并且将返回值携带给调用者 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a+b;</span><br><span class="line">       <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> add(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*2&gt;在一个有返回值的函数中使用return </span></span><br><span class="line"><span class="comment">    这种情况下函数中必须出现return </span></span><br><span class="line"><span class="comment">    return后面必须跟一个具体的数值，而且数值的类型和返回值类型必须保持一致 </span></span><br><span class="line"><span class="comment">    作用：结束整个方法，并且将返回值携带给调用者 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a+b;</span><br><span class="line">       <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> add(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">       System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*2&gt;在一个有返回值的函数中使用return </span></span><br><span class="line"><span class="comment">    这种情况下函数中必须出现return </span></span><br><span class="line"><span class="comment">    return后面必须跟一个具体的数值，而且数值的类型和返回值类型必须保持一致 </span></span><br><span class="line"><span class="comment">    作用：结束整个方法，并且将返回值携带给调用者 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a+b;</span><br><span class="line">       <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><p>情况3</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> compare(<span class="number">34</span>,<span class="number">67</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*3&gt;如果一个自定义的函数有返回值，</span></span><br><span class="line"><span class="comment">    并且在方法中遇到了分支结构，使用return</span></span><br><span class="line"><span class="comment">     在每一个分支后面都需要出现一个return */</span><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需求：比较两个变量的大小，返回较大的一个</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a&lt;b)&#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">67</span></span><br></pre></td></tr></table></figure><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><p>什么是方法重载？</p><p>Java中的方法重载，在一个类中，可以存在多个方法名相同的方法，但是参数列表不同。同一个类中定义的多个方法之间的关系，满足下列的多个方法互相构成重载：</p><p>1.多个方法在同一个类中。<br>2.多个方法具有相同的方法名。<br>3.多个方法的参数不相同，类型不同或者数量不同。</p><p>方法重载举例<br>参数数量不同：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        show(<span class="number">10</span>);</span><br><span class="line">        show(<span class="number">10</span>,<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        System.out.println(a + <span class="string">&quot; &quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">11</span></span><br></pre></td></tr></table></figure><p>参数类型不同：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        show(<span class="number">10</span>);</span><br><span class="line">        show(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">char</span> a)</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><p>参数的数据类型不同</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">text1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        show(<span class="string">&#x27;a&#x27;</span>,<span class="number">10</span>);</span><br><span class="line">        show(<span class="number">10</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">int</span> b,<span class="type">char</span> a)</span>&#123;</span><br><span class="line">        System.out.println(b + <span class="string">&quot; &quot;</span> + a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(<span class="type">char</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        System.out.println(a + <span class="string">&quot; &quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">a <span class="number">10</span></span><br><span class="line"><span class="number">10</span> a</span><br></pre></td></tr></table></figure><p>特别注意：在重载中返回值类型，并不决定方法之间是否构成重载。而是参数的类型、数量和参数类型顺序决定的。</p>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java系列之数组</title>
      <link href="/2022/10/16/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%95%B0%E7%BB%84/"/>
      <url>/2022/10/16/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="什么是数组？"><a href="#什么是数组？" class="headerlink" title="什么是数组？"></a>什么是数组？</h2><ul><li>数组指的是一种容器，可以用来存储同种数据类型的多个值</li></ul><h2 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h2><p>格式一：数据类型[ ] 数组名</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;&#125;;</span><br></pre></td></tr></table></figure><p>格式二：数据类型 数组名[ ]</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> array[]  = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组的静态初始化"><a href="#数组的静态初始化" class="headerlink" title="数组的静态初始化"></a>数组的静态初始化</h2><ul><li>初始化：就是在内存中，为数组容器开辟空间，并将数据存入容器中的过程</li><li>完整格式：数据类型[ ] 数组名 &#x3D; new 数据类型[ ] { 元素1，元素2，元素3};</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>&#125;;</span><br></pre></td></tr></table></figure><p>简写格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] array = &#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组元素遍历"><a href="#数组元素遍历" class="headerlink" title="数组元素遍历"></a>数组元素遍历</h2><ul><li>格式：数组名[索引];</li><li>什么是索引<ul><li>索引也叫下标，角标</li><li>索引的特点：从0开始，逐个+1，连续不断</li></ul></li></ul><p>数组获取元素：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//定义一个数组</span></span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//获取第一个元素</span></span><br><span class="line">    <span class="comment">//数组元素&#123;1,2,3,4,5&#125;</span></span><br><span class="line">    <span class="comment">//对应的下标:&#123;0,1,2,3,4&#125;</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">one</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">    System.out.println(one); <span class="comment">//结果返回1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组存储元素：</p><p>数组存储元素会把原本存在的元素覆盖</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//定义一个数组</span></span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//获取第一个元素</span></span><br><span class="line">    <span class="comment">//数组元素&#123;1,2,3,4,5&#125;</span></span><br><span class="line">    <span class="comment">//对应的下标:&#123;0,1,2,3,4&#125;</span></span><br><span class="line">    <span class="comment">//把数组的第一个元素变为100</span></span><br><span class="line">    array[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">    <span class="comment">//此时元素1就变成了100</span></span><br><span class="line">    <span class="comment">//数组元素&#123;100,2,3,4,5&#125;</span></span><br><span class="line">    <span class="comment">//对应的下标:&#123;0,1,2,3,4&#125;</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">one</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">    System.out.println(one); <span class="comment">//结果返回100</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h2><ul><li>数组遍历：将数组中所有的内容取出来，取出来之后可以打印、求和、判断等</li><li>注意：遍历数组指的是取出数组的过程，不要局限的理解为，遍历就是直接打印</li></ul><p>数组遍历：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//定义一个数组</span></span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//使用for循环进行遍历</span></span><br><span class="line">    <span class="comment">//定义一个i变量，初始值为0，因为索引从0开始</span></span><br><span class="line">    <span class="comment">//array.length代表数组的长度，循环结束的条件</span></span><br><span class="line">    <span class="comment">//当i大于数组的长度时，结束循环</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; array.length;i++)&#123;</span><br><span class="line">        <span class="comment">//每次循环将i代表的索引打印出来</span></span><br><span class="line">        System.out.print(array[i]);</span><br><span class="line">        <span class="comment">//运行结果：1,2,3,4,5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组遍历练习"><a href="#数组遍历练习" class="headerlink" title="数组遍历练习"></a>数组遍历练习</h2><h3 id="遍历数组并求和"><a href="#遍历数组并求和" class="headerlink" title="遍历数组并求和"></a>遍历数组并求和</h3><p>定义一个数组，存储1,2,3,4,5</p><p>遍历数组得到每一个元素，求数组里面所有的数据和</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//定义一个数组</span></span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//定义一个变量来记录数据的和</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//循环遍历数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; array.length;i++)&#123;</span><br><span class="line">        <span class="comment">//把每次array[i]的值跟sum加起来</span></span><br><span class="line">        <span class="comment">//再赋值给sum</span></span><br><span class="line">        sum = sum + array[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当数组里面的值全部获取完再进行打印</span></span><br><span class="line">    System.out.println(sum); <span class="comment">//运行结果为：15</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="统计个数"><a href="#统计个数" class="headerlink" title="统计个数"></a>统计个数</h3><p>定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p><p>遍历数组得到每一个元素，统计数组中里面一共有多少个能被3整除的数字</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(array[i] % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;这个数字&quot;</span> + array[i] + <span class="string">&quot;不能被三整除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;能被三整除的有：&quot;</span> + count + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变化数据"><a href="#变化数据" class="headerlink" title="变化数据"></a>变化数据</h3><p>定义一个数组，存储{1,2,3,4,5,6,7,8,9,10}</p><p>遍历数组得到一个元素</p><p>要求：</p><p>1、如果是奇数，则将当前数字扩大两倍</p><p>2、如果是偶数，则将当前数字变成二分之一</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(array[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            array[i] = array[i] / <span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            array[i] = array[i] * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">        System.out.print(array[j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">       <span class="comment">//运行结果为：2 1 6 2 10 3 14 4 18 5 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组动态初始化"><a href="#数组动态初始化" class="headerlink" title="数组动态初始化"></a>数组动态初始化</h2><ul><li>动态初始化：初始化时只能指定数组长度，由系统为数组分配初始值</li><li>格式：数据类型[] 数组名 &#x3D; new 数据类型[数组长度];</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure><h2 id="数组动态初始化和静态初始化的区别"><a href="#数组动态初始化和静态初始化的区别" class="headerlink" title="数组动态初始化和静态初始化的区别"></a>数组动态初始化和静态初始化的区别</h2><ul><li>动态初始化：手动指定数组长度，由系统给出默认初始化值<ul><li>只明确元素个数，不明确具体数值，推荐使用动态初始化</li></ul></li><li>静态初始化：手动指定数组长度，系统会根据元素个数，计算出数组长度<ul><li>已经明确要操作的数据，直接使用静态初始化即可</li></ul></li></ul><h3 id="数组常见问题"><a href="#数组常见问题" class="headerlink" title="数组常见问题"></a>数组常见问题</h3><ul><li>当访问了数组不存在的索引，就会引发索引越界异常</li></ul><h2 id="数组练习"><a href="#数组练习" class="headerlink" title="数组练习"></a>数组练习</h2><h3 id="求最值"><a href="#求最值" class="headerlink" title="求最值"></a>求最值</h3><p>需求：已知数组元素为{33,5,44,55}</p><p>找出数组中最大值并打印</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">33</span>,<span class="number">5</span>,<span class="number">22</span>,<span class="number">44</span>,<span class="number">55</span>&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(array[i] &gt; max)&#123;</span><br><span class="line">            max = array[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历数组求和"><a href="#遍历数组求和" class="headerlink" title="遍历数组求和"></a>遍历数组求和</h3><p>需求：生成10个~100之间的随机数存入数组</p><p>求出所有数据的和</p><p>求出所有数据的平均数</p><p>统计有多少个数据比平均值小</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">G</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ave</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//把随机数存入数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>);</span><br><span class="line">            array[i] = s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历一下数组方便查看</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            System.out.print(array[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            sum = sum + array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和是&quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求平均数</span></span><br><span class="line">        ave = sum / array.length;</span><br><span class="line">        System.out.println(ave);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求比平均数小的数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(array[i] &lt; ave)&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;比平均数小的有&quot;</span>+count+<span class="string">&quot;个&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="交换数组"><a href="#交换数组" class="headerlink" title="交换数组"></a>交换数组</h3><p>需求：定义一个数组，存入1,2,3,4,5</p><p>交换前：1,2,3,4,5</p><p>交换后：5,2,3,4,1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">    arr[<span class="number">0</span>] = arr[<span class="number">4</span>];</span><br><span class="line">    arr[<span class="number">4</span>] = temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>交换前：1,2,3,4,5</p><p>交换后：5,4,3,2,1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义两个变量 i 和 j</span></span><br><span class="line">    <span class="comment">//i 代表数组第一个元素</span></span><br><span class="line">    <span class="comment">//j 代表数组最后一个元素</span></span><br><span class="line">    <span class="comment">//i 每次循环都加1</span></span><br><span class="line">    <span class="comment">//j 每次循环都减1</span></span><br><span class="line">    <span class="comment">//当 i &lt; j 时循环就停止</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j = arr.length - <span class="number">1</span>;i &lt; j;i++,j--)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打乱数组中的数据"><a href="#打乱数组中的数据" class="headerlink" title="打乱数组中的数据"></a>打乱数组中的数据</h3><p>需求：定义一个数组，存入1~5，要求打乱数组中所有数据的顺序</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//使用随机函数Random</span></span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="comment">//用随机数当作数组的索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> r.nextInt(arr.length);</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[s];</span><br><span class="line">        arr[s] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java系列之循环语句</title>
      <link href="/2022/10/14/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
      <url>/2022/10/14/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><p>格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句)&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程<br>执行初始化语句<br>执行条件判断语句，看其结果是true还是false，如果是false，循环结束，如果是true，继续执行<br>执行循环体语句<br>执行条件控制语句</p><h2 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h2><p>格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断语句)&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：<br>执行初始化语句<br>执行条件判断语句，看其结果是true还是false，如果是false，循环结束，如果是true，继续执行<br>执行循环体语句<br>执行条件控制语句</p><h2 id="do…while循环语句"><a href="#do…while循环语句" class="headerlink" title="do…while循环语句"></a>do…while循环语句</h2><p>格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure><p>执行流程：<br>执行初始化语句<br>执行循环体语句<br>执行条件控制语句<br>执行条件判断语句，看其结果是true还是false，如果是false，循环结束，如果是true，继续执行</p><h2 id="三种循环的区别"><a href="#三种循环的区别" class="headerlink" title="三种循环的区别"></a>三种循环的区别</h2><p>三种循环的区别：<br>for循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）<br>do…while循环先执行一次循环体，然后判断条件是否成立，是否继续执行循环体（先执行后判断）</p><p>for和while的区别：<br>条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问了<br>条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用</p><p>死循环格式：<br>for(; ; ){}<br>while(true){}<br>do{}while(true)</p><h2 id="Random随机数"><a href="#Random随机数" class="headerlink" title="Random随机数"></a>Random随机数</h2><p>作用：产生一个随机数</p><p>使用步骤：</p><p>导包：import java.util.Random;<br>创建对象：Random r &#x3D; new Random();<br>获取随机数：int number &#x3D; r.nextInt(10); &#x2F;&#x2F;获取数据的范围：[0,10]，包括0，不包括10</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Random</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//用循环获取10个随机数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="comment">//获取随机数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：获取一个1-100之间的随机数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="案例一：逢七过"><a href="#案例一：逢七过" class="headerlink" title="案例一：逢七过"></a>案例一：逢七过</h3><p>需求：使用重新在控制台打印出1~100之间的满足逢七必过的规则的数据</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入1~100之间的数字：&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (num % <span class="number">10</span> == <span class="number">7</span> || num / <span class="number">10</span> % <span class="number">10</span> == <span class="number">7</span> || num % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;过&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不过&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="案例二：求平方根"><a href="#案例二：求平方根" class="headerlink" title="案例二：求平方根"></a>案例二：求平方根</h3><p>需求：键盘录入一个大于等于2的整数x  计算并返回x的平方根  结果只保留整数部分  小数部分将被舍去</p><p>10</p><p>1*1&#x3D;1</p><p>2*2&#x3D;4</p><p>3*3&#x3D;9</p><p>4*4&#x3D;16</p><p>那么10的平方根就在3  和  4之间</p><p>在代码中</p><p>从2开始循环  拿着数字的平方跟原来的数字进行比较</p><p>如果小于  继续往后判断</p><p>如果大于  前一个数字就是平方根  加上  1</p><p>如果等于  当前数字就是平方根</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入大于等于2的数字：&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; num; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * i == num) &#123;</span><br><span class="line">                    System.out.println(i + <span class="string">&quot;就是&quot;</span> + num + <span class="string">&quot;的平方根&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i * i &gt; num) &#123;</span><br><span class="line">                    System.out.println((i - <span class="number">1</span>) + <span class="string">&quot;就是&quot;</span> + num + <span class="string">&quot;平方根的整数部分&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="案例三：求质数"><a href="#案例三：求质数" class="headerlink" title="案例三：求质数"></a>案例三：求质数</h3><p>需求：键盘录入一个正整数x  判断该整数是否为一个质数</p><p>质数：能被1和自身整除的数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入需要判断的数：&quot;</span>);</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; num; i++) &#123; <span class="comment">//9 % 2 = 1</span></span><br><span class="line">                <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//只有当循环结束了  表示这个范围之内的所有数字都判断完毕了</span></span><br><span class="line">            <span class="comment">//此时才能判断num是不是一个整数</span></span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;是一个质数&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不是一个质数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java系列之流程控制语句</title>
      <link href="/2022/10/14/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>/2022/10/14/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><p>顺序结构是程序中最简单、最基本的流程控制，没用特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的</p><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>格式1：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)&#123;</span><br><span class="line">语句体；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程<br>首先计算关系表达式的值<br>如果关系表达式的值为true，则执行语句体<br>如果关系表达式的值为false就不执行语句体<br>继续执行后面的语句内容</p><p>格式2：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)&#123;</span><br><span class="line">语句体<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">语句体<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程<br>首先计算关系表达式的值<br>如果关系表达式的值为true，则执行语句体<br>如果关系表达式的值为false就不执行语句体<br>继续执行后面的语句内容</p><p>格式3：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>)&#123;</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(关系表达式<span class="number">2</span>)&#123;</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">···</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程<br>首先计算关系表达式的值<br>如果关系表达式的值为true，则执行语句体1<br>如果关系表达式的值为false，则执行语句体2<br>继续执行后面的语句内容</p><p>需求：用户在超市实际购买，商品总价为600元，键盘录入一个整数表示用户实际支付的钱，如果付款大于大于600，表示支付成功，否则支付失败</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入所要支付的钱：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num1 &gt;= <span class="number">600</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;支付成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;支付失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据票号奇数坐左边  偶数坐右边</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入票号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num1 % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请坐右边&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请坐左边&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入会员等级 1级打9折 2级打8折 3级打7折 并计算实际支付的钱数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">price</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入VIP等级&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num1 == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请支付&quot;</span> + (price * <span class="number">0.9</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num1 == <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请支付&quot;</span> + (price * <span class="number">0.8</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num1 == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请支付&quot;</span> + (price * <span class="number">0.7</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;打骨折&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>：</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>：</span><br><span class="line">语句体<span class="number">2</span>；</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">···</span><br><span class="line"><span class="keyword">default</span>：</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line">[<span class="keyword">break</span>;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>格式说明<br>表达式：取值为byte, short, int, char, string<br>case：后面跟的是要和表达式进行比较的值<br>break：表示中断，结束的意思，用来结束switch语句<br>default：表示所有情况都不匹配的时候，就执行该处的内容，和if语句的else相似</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">switch</span> (num) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的算法</title>
      <link href="/2022/10/13/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/"/>
      <url>/2022/10/13/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="常见算法"><a href="#常见算法" class="headerlink" title="常见算法"></a>常见算法</h1><h2 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h2><h3 id="基本查找"><a href="#基本查找" class="headerlink" title="基本查找"></a>基本查找</h3><p>基本查找&#x2F;顺序查找</p><p>核心：从0索引开始挨个查找</p><p>需求：定义一个方法利用基本查找，查询某个元素是否存在</p><p>数据如下：{131,,127,147,81,103,23,7,79}</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">131</span>,<span class="number">127</span>,<span class="number">147</span>,<span class="number">81</span>,<span class="number">103</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">79</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">81</span>;</span><br><span class="line">        System.out.println(basicSearch(arr,number));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要的参数</span></span><br><span class="line">    <span class="comment">//1.数组</span></span><br><span class="line">    <span class="comment">//2.要查找的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">basicSearch</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == number)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分查找-x2F-折半查找"><a href="#二分查找-x2F-折半查找" class="headerlink" title="二分查找&#x2F;折半查找"></a>二分查找&#x2F;折半查找</h3><p>前提条件：数组中的数据必须是有序的</p><p>核心逻辑：每次排除一半的查找范围</p><p>1.min和max表示当前要查找的范围</p><p>2.mid是在min和max中间的</p><p>3.如果要查找的元素在mid的左边，缩小范围时，min不变，max等于mid减1</p><p>4.如果要查找的元素在mid的右边，缩小范围时，max不变，min等于mid加1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">7</span>,<span class="number">23</span>,<span class="number">79</span>,<span class="number">81</span>,<span class="number">103</span>,<span class="number">127</span>,<span class="number">131</span>,<span class="number">147</span>&#125;;</span><br><span class="line">        System.out.println(binarySeach(arr,<span class="number">81</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySeach</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用循环查找需要查找的数据</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; max) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//找到中间的位置</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (min + max) / <span class="number">2</span>;</span><br><span class="line">            <span class="comment">//拿着mid的数据在数组中进行比较</span></span><br><span class="line">            <span class="keyword">if</span> (arr[mid] &gt; number) &#123;</span><br><span class="line">                <span class="comment">//大于</span></span><br><span class="line">                max = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; number) &#123;</span><br><span class="line">                <span class="comment">//小于</span></span><br><span class="line">                min = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分查找改进（插值查找）"><a href="#二分查找改进（插值查找）" class="headerlink" title="二分查找改进（插值查找）"></a>二分查找改进（插值查找）</h4><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-19_19-56-52.png"></p><h3 id="分块查找"><a href="#分块查找" class="headerlink" title="分块查找"></a>分块查找</h3><p>分块原则1：前一块中的最大一块，小于后一块中所有的数据（块内无序，块间有序）</p><p>分块原则2：块的数量一般等于数字的个数开根号。比如：16个数字一般分为4块左右</p><p>核心思路：先确定要查找的元素在哪一块，然后在块内挨个查找</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-22_22-40-33.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//分块查找</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">16</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">12</span>, <span class="number">21</span>,<span class="number">18</span>,</span><br><span class="line">                    <span class="number">32</span>,<span class="number">23</span>,<span class="number">37</span>,<span class="number">26</span>,<span class="number">45</span>,<span class="number">34</span>,</span><br><span class="line">                    <span class="number">50</span>,<span class="number">48</span>,<span class="number">61</span>,<span class="number">52</span>,<span class="number">73</span>,<span class="number">66</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建三个块的对象</span></span><br><span class="line">        <span class="type">Block</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">21</span>,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">45</span>,<span class="number">6</span>,<span class="number">11</span>);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">b3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">73</span>,<span class="number">12</span>,<span class="number">17</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义数组管理者三个对象（索引表）</span></span><br><span class="line">        Block[] blockArr = &#123;b1,b2,b3&#125;;</span><br><span class="line">        <span class="comment">//定义一个需要查找的数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">37</span>;</span><br><span class="line">        <span class="comment">//调用方法，传递索引表，数组，要查找的元素</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> getIndex(blockArr,arr,number);</span><br><span class="line">        <span class="comment">//打印</span></span><br><span class="line">        System.out.println(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(Block[] blockArr, <span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="comment">//1.确定number在那一块</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">indexBlock</span> <span class="operator">=</span> findIndexBlock(blockArr,number);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(indexBlock == -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取这一块的开始索引，结束索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startIndex</span> <span class="operator">=</span> blockArr[indexBlock].getStartIndex();</span><br><span class="line">        <span class="type">int</span> <span class="variable">endIndex</span> <span class="operator">=</span> blockArr[indexBlock].getEndIndex();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex;i &lt;= endIndex;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == number)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法用来确定number在哪个块中</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findIndexBlock</span><span class="params">(Block[] blockArr,<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="comment">//Block b1 = new Block(21,0,5);</span></span><br><span class="line">        <span class="comment">//Block b2 = new Block(45,6,11);</span></span><br><span class="line">        <span class="comment">//Block b3 = new Block(73,12,17);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从0索引开始遍历blockArr，如果number小于max，那么就表示number就在这个表中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; blockArr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(number &lt;= blockArr[i].getMax())&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Block</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> max;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> startIndex;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> endIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Block</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Block</span><span class="params">(<span class="type">int</span> max, <span class="type">int</span> startIndex, <span class="type">int</span> endIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.max = max;</span><br><span class="line">        <span class="built_in">this</span>.startIndex = startIndex;</span><br><span class="line">        <span class="built_in">this</span>.endIndex = endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMax</span><span class="params">(<span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.max = max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStartIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStartIndex</span><span class="params">(<span class="type">int</span> startIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.startIndex = startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEndIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEndIndex</span><span class="params">(<span class="type">int</span> endIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.endIndex = endIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>扩展的分块查找（无规律的数据）</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-22_23-11-35.png"></p><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p>冒泡排序：相邻的数据两两比较，小的放前面，大的放后面</p><p>1.第一轮循环结束，最大值已经找到，在数组的最右边</p><p>2.第二轮循环只要在剩下的元素找最大值就可以了</p><p>3.如果数组中有n个数据，总共我们只要执行n-1轮代码就可以了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">D</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length- <span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>选择排序：从0索引开始，拿着每一个索引上的元素跟后面的元素依次比较，小的放前面，大的放后面，以此类推</p><p>1.从0索引开始，跟后面的元素一一比较</p><p>2.小的放前面，大的放后面</p><p>3.第一轮循环结束后，最小的数据已经确定</p><p>4.第二轮循环从1索引开始以此类推</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">E</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i] &gt; arr[j])&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>插入排序：将0索引的元素到N索引的元素看做是有序的，把N+1索引的元素放到最后一个当成是无序的。遍历无序的数据，将遍历到的元素插入到有序序列中适当的位置，如遇到相同的数据，插在后面</p><p>N的</p><p>范围：0~最大索引</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">F</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">44</span>,<span class="number">38</span>,<span class="number">5</span>,<span class="number">47</span>,<span class="number">15</span>,<span class="number">36</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">2</span>,<span class="number">46</span>,<span class="number">4</span>,<span class="number">19</span>,<span class="number">50</span>,<span class="number">48</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.找到无序的那一组是从哪个索引开始的</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startIndex</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] &gt; arr[i + <span class="number">1</span>])&#123;</span><br><span class="line">                startIndex = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历从startIndex开始到最后一个元素，依次得到无序数据中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//记录当前要插入数据的索引</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; arr[j] &lt; arr[j - <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">                arr[j - <span class="number">1</span>] = temp;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h3><p>递归指的是方法中调用方法本身的现象</p><p>递归方法的作用：把一个赋值的问题层层转化为一个与原问题相似的规模较小的问题来求解</p><p>书写递归的两个核心：</p><ul><li>找出口：什么时候不再调用方法</li><li>找规则：如何把大问题变成规模较小的问题</li></ul><p>递归求1~100之间的和</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">G</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getSum(<span class="number">100</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> number + getSum(number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>递归求阶乘</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">H</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getFactorialRecursion(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getFactorialRecursion</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> number * getFactorialRecursion(number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>第一轮：把0索引的数字作为基准数，确定基准数在数组中正确的位置。比基准数小的全部在左边，比基准数大的全部在右边</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">I</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">6</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line">        quickSort(arr,<span class="number">0</span>,arr.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//参数一：需要排序的数组</span></span><br><span class="line">    <span class="comment">//参数二、需要排序数组的起始索引</span></span><br><span class="line">    <span class="comment">//参数三、需要排序数组的结束索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        <span class="comment">//定义两个变量记录要查找的范围</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> i + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> j;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归的出口</span></span><br><span class="line">        <span class="keyword">if</span>(start &gt; end)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//记录基准数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">baseNumber</span> <span class="operator">=</span> arr[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用循环找到要交换的数字</span></span><br><span class="line">        <span class="keyword">while</span>(start != end)&#123;</span><br><span class="line">            <span class="comment">//利用end，从后往前找，找比基准数小的数字</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(end &lt;= start || arr[end] &lt; baseNumber)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                end--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//利用start，从前往后找，找比基准数大的数字</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(end &lt;= start || arr[start] &gt; baseNumber)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                start++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//把end和start指向的元素进行交换</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当start和end指向同一个元素的时候，那么上面的循环就会结束</span></span><br><span class="line">        <span class="comment">//表示已经找到了基准数在数组中应存入的位置</span></span><br><span class="line">        <span class="comment">//基准数归位</span></span><br><span class="line">        <span class="comment">//就是拿着这个范围中的第一个数字，跟start指向的元素进行交换</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[start];</span><br><span class="line">        arr[start] = temp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//确定6左边的范围，重复刚刚的事情</span></span><br><span class="line">        quickSort(arr,i,start - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//确定6右边的范围，重复刚刚的事情</span></span><br><span class="line">        quickSort(arr,start + <span class="number">1</span>,j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1.冒泡排序</p><ul><li>相邻的元素两两比较，小的放前面，大的放后面</li></ul><p>2.选择排序</p><ul><li>从0索引开始，拿着每一个索引上的元素跟后面的元素依次比较，小的放前面，大的放后面</li></ul><p>3.插入排序</p><ul><li>将数组分为有序和无序两组，遍历无序数据，将元素插入有序序列中即可</li></ul><p>4.快速排序</p><ul><li>将排序范围中的第一个数字作为基准数，再定义两个变量start和end</li><li>start从前往后找比基准数大的，end从后往前找比基准数小的</li><li>找到之后交换start和end指向的元素，并稀罕这一过程，直到start个end处于同一个位置，该位置是基准数应存入的位置，再让基准数归位</li><li>归位后的效果：基准数左边的，比基准数小，基准数右边的，比基准数大</li></ul><h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><h2 id="不死神兔"><a href="#不死神兔" class="headerlink" title="不死神兔"></a>不死神兔</h2><p>有一个很有名的数学逻辑题叫做不死神兔问题，有一对兔子，从出生后第三个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一队兔子，假如兔子都不死，问第十二个月的兔子对数为多少</p><p>特点：从第三个数据开始，是前两个数据的和（斐波那契数列）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">one</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">12</span>];</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr[i] = arr[i - <span class="number">1</span>] + arr[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arr[<span class="number">11</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="猴吃桃子"><a href="#猴吃桃子" class="headerlink" title="猴吃桃子"></a>猴吃桃子</h2><p>有一堆桃子，第一只猴子吃了其中的一半，并多吃了一个，以后每天猴子都吃当前剩下来的一半，然后再多吃一个，第十天的时候（还没吃），发现只剩下一个桃子了，请问，最初总共多少个桃子</p><p>day10： 1</p><p>day9： （day10 + 1） *  2 &#x3D; 4</p><p>day8：（day9 + 1）* 2 &#x3D; 10</p><p>出口：day &#x3D;&#x3D; 10 剩下1</p><p>规律：每一天的桃子数量都是最后一天数量加1乘2</p><p>反向递归</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">one</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getCount(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">(<span class="type">int</span> day)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(day &lt;= <span class="number">0</span> || day &gt;= <span class="number">11</span>)&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;当前时间错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//递归出口</span></span><br><span class="line">        <span class="keyword">if</span>(day == <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (getCount(day + <span class="number">1</span>) + <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java系列之运算符</title>
      <link href="/2022/10/12/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2022/10/12/Java%E7%B3%BB%E5%88%97%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>运算符：对字面量或者变量进行操作的符号</p><p>表达式：用运算符把字面量或者变量连接起来，符合java语法的式子就可以称为表达式，不同运算符连接的表达式体现的是不同类型的表达式</p><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><h3 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">3</span>+<span class="number">2</span>); <span class="comment">//5</span></span><br><span class="line">        <span class="comment">//如果在计算时有小数参与 结果可能不精确</span></span><br><span class="line">        System.out.println(<span class="number">1.1</span>+<span class="number">1.01</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="除和取模"><a href="#除和取模" class="headerlink" title="除和取模"></a>除和取模</h3><p>除</p><p>注意：整数与整数计算只能得到整数  想要取到小数则需要两边任意一个为小数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">4</span> / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">3</span> / <span class="number">2</span>); <span class="comment">//1</span></span><br><span class="line">        Sydtem.out.println(<span class="number">3.0</span> / <span class="number">2</span>);<span class="comment">//1.5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模  取模、取余实际上也是做除法运算  只不过得到的是余数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">4</span> % <span class="number">2</span>); <span class="comment">//0</span></span><br><span class="line">        System.out.println(<span class="number">5</span> % <span class="number">3</span>); <span class="comment">//2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>数组拆分：键盘录入三个数，将其拆分为个位、十位、百位后，打印在控制台</p><p>公式总结：</p><ul><li>个位：数值 % 10</li><li>十位：数值  &#x2F; 10 % 10</li><li>百位：数值 &#x2F; 100 % 10</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个三位数:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span> number / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">        System.out.println(ge);</span><br><span class="line">        System.out.println(shi);</span><br><span class="line">        System.out.println(bai);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><p>类型转换的分类</p><ul><li>隐式转换（自动类型提升）：取值范围小的数值 转换成 取值范围大的数值</li><li>强制转换：取值范围大的数值 转换成 取值范围小的数值</li></ul><p>隐式转换</p><p>隐式转换范例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> a; <span class="comment">//值提升到了 10.0</span></span><br></pre></td></tr></table></figure><p>隐式转换小结：</p><ul><li>取值范围：byte &lt; short &lt; int &lt; long &lt; float &lt; double</li><li>什么时候需要转换：数据类型不一样 不能进行计算  需要转换成一样的才可以进行计算</li><li>取值范围小的 和取值范围大的进行运算 小的会先提升为大的数据类型 再进行运算</li><li>byte short char 三种类型的数据在运算的时候 都会直接先提升为 int 然后再进行运算</li></ul><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><p>请问最终的运算结果是什么类型的？</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">数据类型 result = b1 + b2; <span class="comment">//int类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">20.0</span>;</span><br><span class="line">数据类型 result = i + n + d;<span class="comment">//i + n 的类型是long  （i + n) + d 的类型是double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line">数据类型 result = b + s + n；<span class="comment">//int + long = long</span></span><br></pre></td></tr></table></figure><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><ul><li>如果把一个取值范围大的数值  赋值给取值范围小的变量  是不允许直接赋值的  如果一定要这样做就需要加入强制转换</li><li>格式：目标数据类型 变量名 &#x3D; (目标数据类型) 被强制转换的数据</li></ul><p>范例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>) a;</span><br></pre></td></tr></table></figure><p>练习：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> b1 + b2;</span><br><span class="line">System.out.println(result); <span class="comment">//30</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> (<span class="type">byte</span>) (b1 + b2);</span><br><span class="line">System.out.println(result); <span class="comment">//30</span></span><br></pre></td></tr></table></figure><h3 id="字符串和字符的加操作"><a href="#字符串和字符的加操作" class="headerlink" title="字符串和字符的加操作"></a>字符串和字符的加操作</h3><p>字符串的“+”操作</p><ul><li>当“+”操作中出现字符串是  这个“+”是字符串连接符  会把前后数据进行拼接  产生一个新字符串</li><li>连续进行“+”操作时  从左到右逐个执行</li></ul><p>字符的“+”操作</p><ul><li>当“字符 + 字符”时会把字符通过ASCII码表查询到对应的数字再进行计算</li><li>当“字符 + 数字”时会把字符通过ASCII码表查询到对应的数字再进行计算</li></ul><p>注意单引号跟双引号：两个双引号字符相加就是拼接  两个单引号字符相加就是返回ASCII码  一边单一边双也是aa</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;a&quot;</span> + <span class="string">&quot;a&quot;</span>);  <span class="comment">//aa</span></span><br><span class="line">System.out.println(<span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;a&#x27;</span>);  <span class="comment">//194</span></span><br><span class="line">System.out.println(<span class="string">&quot;a&quot;</span> + <span class="string">&#x27;a&#x27;</span>);  <span class="comment">//aa</span></span><br></pre></td></tr></table></figure><h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><p>基本用法</p><p>++或–  放到前面就是前置运算符  放到后面就是后置运算符</p><p>前置运算符：先返回值 再自加1</p><p>后置运算符：先自加1 再返回值</p><p>++或–  无论放在变量前面或者后面  单独写一行结果都是一样的</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">++</td><td align="center">自加</td><td align="center">变量的值加1</td></tr><tr><td align="center">–</td><td align="center">自减</td><td align="center">变量的值减1</td></tr></tbody></table><h2 id="关系运算符练习"><a href="#关系运算符练习" class="headerlink" title="关系运算符练习"></a>关系运算符练习</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> practice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的时髦度：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入相亲对象的时髦度：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> num1 &gt; num2;</span><br><span class="line"></span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>^  逻辑异或：相同为false，不同为true</p><h2 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h2><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">短路与</td><td align="center">结果和&amp;一样  但是具有短路效果</td></tr><tr><td align="center">||</td><td align="center">短路或</td><td align="center">结果和||一样  但是具有短路效果</td></tr></tbody></table><h2 id="三元运算符和运算符的优先级"><a href="#三元运算符和运算符的优先级" class="headerlink" title="三元运算符和运算符的优先级"></a>三元运算符和运算符的优先级</h2><p>格式：关系表达式?表达式1:表达式;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a &gt; b?a:b;</span><br></pre></td></tr></table></figure><p>判断两只老虎体重是否相同</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">practice1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> num.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> num1 == num2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不同&quot;</span>;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
