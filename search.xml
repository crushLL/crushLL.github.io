<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>漏洞平台介绍</title>
      <link href="/2022/11/30/%E6%BC%8F%E6%B4%9E%E5%B9%B3%E5%8F%B0%E4%BB%8B%E7%BB%8D/"/>
      <url>/2022/11/30/%E6%BC%8F%E6%B4%9E%E5%B9%B3%E5%8F%B0%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞平台介绍"><a href="#漏洞平台介绍" class="headerlink" title="漏洞平台介绍"></a>漏洞平台介绍</h2><h3 id="补天应急响应中心"><a href="#补天应急响应中心" class="headerlink" title="补天应急响应中心"></a>补天应急响应中心</h3><p>补天对网站权重要求是百度或移动权重大于等于1，谷歌大于等于3</p><p>交补天的漏洞如果通过审核的话，会根据你的漏洞危害程度分等级：严重、高危、中危、低危</p><p>然后根据漏洞等级和厂商的大小给相应的奖励</p><p>奖励分别有现金奖励跟kb币奖励，现金就不用多说了，kb的话可以在补天的商城换东西，1kb约等于5元</p><ul><li>反射XSS(公益不收，专属有些是收的)</li><li>CSRF</li><li>目录遍历</li><li>二进制</li><li>密码处的验证码爆破</li><li>http.sys远程代码执行漏洞</li><li>URL爆出了数据库</li><li>jquery version泄露</li><li>绝对路径泄露</li><li>Slow attack满攻击</li><li>短文件漏洞</li><li>DOS不收</li></ul><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/20221130003837.png"></p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/image-20221130005700073.png"></p><h3 id="漏洞盒子"><a href="#漏洞盒子" class="headerlink" title="漏洞盒子"></a>漏洞盒子</h3><p>漏洞盒子的话对网站权重没有要求基本上是个漏洞都要</p><p>漏洞盒子公益SRC是没有奖励的</p><p>等级同上</p><p>PS：漏洞盒子审核嘎嘎慢</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/20221130003921.png"></p><h3 id="CNVD"><a href="#CNVD" class="headerlink" title="CNVD"></a>CNVD</h3><p>CNVD全称为国家信息安全漏洞共享平台</p><p>交CNVD一般都是为了证书(至少我是，以后可以写简历上)</p><p>CNVD放发证书的条件</p><p>事件型漏洞需要是三大运营商（移动、联通、电信）的中高危漏洞，或者党政机关、重要行业单位、科研院所、重要企事业单位（如：中央国有大型企业、部委直属事业单位等）的高危事件型漏洞才会颁发原创漏洞证书</p><p>通用型漏洞的话厂商的注册资金需要达到5000W以上，旗下产品存在中高危漏洞，在互联网上不小于十例(最好的大于13例，提交页面写三例，然后漏洞报告里面写十例)</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/20221130003946.png"></p><p>类似这样的漏洞平台还有很多，比如360安全响应中心，阿里应急响应中心等等，可以自行百度</p>]]></content>
      
      
      <categories>
          
          <category> web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行版学生管理系统</title>
      <link href="/2022/10/24/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/10/24/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="学生管理系统登录功能"><a href="#学生管理系统登录功能" class="headerlink" title="学生管理系统登录功能"></a>学生管理系统登录功能</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><p>​为学生管理系统书写一个登陆、注册、忘记密码的功能。</p><p>​只有用户登录成功之后，才能进入到学生管理系统中进行增删改查操作。</p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><h4 id="登录界面："><a href="#登录界面：" class="headerlink" title="登录界面："></a>登录界面：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;欢迎来到学生管理系统&quot;</span></span><br><span class="line"><span class="string">&quot;1:登录 2:注册 3:忘记密码 4:退出&quot;</span></span><br><span class="line"><span class="string">&quot;请输入您的选择:&quot;</span></span><br></pre></td></tr></table></figure><h4 id="用户类："><a href="#用户类：" class="headerlink" title="用户类："></a>用户类：</h4><p>​属性：用户名、密码、身份证号码、手机号码</p><h4 id="注册功能："><a href="#注册功能：" class="headerlink" title="注册功能："></a>注册功能：</h4><p>​1，用户名需要满足以下要求：</p><p>​验证要求：</p><p>​用户名唯一</p><p>​用户名长度必须在3~15位之间 </p><p>​只能是字母加数字的组合，但是不能是纯数字</p><p>​2，密码键盘输入两次，两次一致才可以进行注册。</p><p>​3，身份证号码需要验证。</p><p>​验证要求：</p><p>​长度为18位</p><p>​不能以0为开头</p><p>​前17位，必须都是数字</p><p>​最为一位可以是数字，也可以是大写X或小写x</p><p>​4，手机号验证。</p><p>​验证要求：</p><p>​长度为11位</p><p>​不能以0为开头</p><p>​必须都是数字</p><h4 id="登录功能："><a href="#登录功能：" class="headerlink" title="登录功能："></a>登录功能：</h4><p>​1，键盘录入用户名</p><p>​2，键盘录入密码</p><p>​3，键盘录入验证码</p><p>验证要求：</p><p>​用户名如果未注册，直接结束方法，并提示：用户名未注册，请先注册</p><p>​判断验证码是否正确，如不正确，重新输入</p><p>​再判断用户名和密码是否正确，有3次机会</p><h4 id="忘记密码："><a href="#忘记密码：" class="headerlink" title="忘记密码："></a>忘记密码：</h4><p>​       1，键盘录入用户名，判断当前用户名是否存在，如不存在，直接结束方法，并提示：未注册</p><p>​2，键盘录入身份证号码和手机号码</p><p>​3，判断当前用户的身份证号码和手机号码是否一致，</p><p>​如果一致，则提示输入密码，进行修改。</p><p>​如果不一致，则提示：账号信息不匹配，修改失败。</p><h4 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.Exit(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="验证码规则："><a href="#验证码规则：" class="headerlink" title="验证码规则："></a>验证码规则：</h4><p>​长度为5</p><p>​由4位大写或者小写字母和1位数字组成，同一个字母可重复</p><p>​数字可以出现在任意位置</p><p>比如：</p><p>​aQa1K</p><h1 id="学生管理系统增删改查功能"><a href="#学生管理系统增删改查功能" class="headerlink" title="学生管理系统增删改查功能"></a>学生管理系统增删改查功能</h1><h2 id="需求：-1"><a href="#需求：-1" class="headerlink" title="需求："></a>需求：</h2><p>​采取控制台的方式去书写学生管理系统。</p><h2 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h2><h4 id="初始菜单："><a href="#初始菜单：" class="headerlink" title="初始菜单："></a>初始菜单：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;欢迎来到学生管理系统&quot;</span></span><br><span class="line"><span class="string">&quot;1：添加学生 2：删除学生 3：修改学生 4：查询学生 5：退出&quot;</span></span><br><span class="line"><span class="string">&quot;请输入您的选择:&quot;</span></span><br></pre></td></tr></table></figure><h4 id="学生类："><a href="#学生类：" class="headerlink" title="学生类："></a>学生类：</h4><p>​属性：id、姓名、年龄、家庭住址</p><h4 id="添加功能："><a href="#添加功能：" class="headerlink" title="添加功能："></a>添加功能：</h4><p>​键盘录入每一个学生信息并添加，需要满足以下要求：</p><ul><li>id唯一</li></ul><h4 id="删除功能："><a href="#删除功能：" class="headerlink" title="删除功能："></a>删除功能：</h4><p>​键盘录入要删除的学生id，需要满足以下要求：</p><ul><li>id存在删除</li><li>id不存在，需要提示不存在，并回到初始菜单</li></ul><h4 id="修改功能："><a href="#修改功能：" class="headerlink" title="修改功能："></a>修改功能：</h4><p>​键盘录入要修改的学生id，需要满足以下要求</p><ul><li>id存在，继续录入其他信息</li><li>id不存在，需要提示不存在，并回到初始菜单</li></ul><h4 id="查询功能："><a href="#查询功能：" class="headerlink" title="查询功能："></a>查询功能：</h4><p>​打印所有的学生信息，需要满足以下要求</p><ul><li>如果没有学生信息，提示：当前无学生信息，请添加后再查询</li><li>如果有学生信息，需要按照以下格式输出。（不用过于纠结对齐的问题）</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">id姓名年龄家庭住址</span><br><span class="line">heima001张三<span class="number">23</span> 南京</span><br><span class="line">heima002李四<span class="number">24</span> 北京</span><br><span class="line">heima003王五<span class="number">25</span> 广州</span><br><span class="line">heima004赵六 <span class="number">26</span> 深圳</span><br></pre></td></tr></table></figure><h4 id="退出-1"><a href="#退出-1" class="headerlink" title="退出"></a>退出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.Exit(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h2><p>User</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String PhoneNumber;</span><br><span class="line">    <span class="keyword">private</span> String Personid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password, String phoneNumber, String personid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        PhoneNumber = phoneNumber;</span><br><span class="line">        Personid = personid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhoneNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> PhoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhoneNumber</span><span class="params">(String phoneNumber)</span> &#123;</span><br><span class="line">        PhoneNumber = phoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPersonid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Personid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPersonid</span><span class="params">(String personid)</span> &#123;</span><br><span class="line">        Personid = personid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>App</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.swing.interop.SwingInterOpUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;欢迎来到学生管理系统&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请选择操作：1、登录 2、注册 3、忘记密码 4、退出&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">input</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (input) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    login(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    register(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    forgetPassword(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;退出成功&quot;</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;没有这个选项&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户注册功能</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(ArrayList&lt;User&gt; list)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">//用户名注册</span></span><br><span class="line">        String username;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名&quot;</span>);</span><br><span class="line">            username = sc.next();</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> checkusername(username);</span><br><span class="line">            <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名格式错误，请重新输入&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//校验用户名是否唯一</span></span><br><span class="line">            <span class="comment">//校验用户输入的username在集合中是否存在</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag2</span> <span class="operator">=</span> contains(list, username);</span><br><span class="line">            <span class="keyword">if</span> (flag2) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名：&quot;</span> + username + <span class="string">&quot;已存在，请重新输入&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名：&quot;</span> + username + <span class="string">&quot;可用&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//密码注册</span></span><br><span class="line">        String password;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">            password = sc.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;请再次输入密码&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">aginpassword</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="keyword">if</span> (!(password.equals(aginpassword))) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;密码不一致&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;密码一致&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//身份证号码</span></span><br><span class="line">        String personid;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入身份证号码&quot;</span>);</span><br><span class="line">            personid = sc.next();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag3</span> <span class="operator">=</span> checkpersonid(personid);</span><br><span class="line">            <span class="keyword">if</span> (flag3) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;身份证号码满足条件&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;身份证号码格式错误，请重新输入&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//手机号码</span></span><br><span class="line">        String phoneNumber;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入手机号&quot;</span>);</span><br><span class="line">            phoneNumber = sc.next();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag4</span> <span class="operator">=</span> checkphoneNumber(phoneNumber);</span><br><span class="line">            <span class="keyword">if</span> (flag4) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;手机号正确&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;手机号格式错误&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用户名、密码、身份证、手机号添加到集合中</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(username, password, personid, phoneNumber);</span><br><span class="line">        list.add(u);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户注册成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">        printList(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户登录功能</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(ArrayList&lt;User&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> contains(list,username);</span><br><span class="line">            <span class="keyword">if</span>(!flag1)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名&quot;</span> + username + <span class="string">&quot;未注册，请注册后再登录&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">rightCode</span> <span class="operator">=</span> getCode();</span><br><span class="line">                System.out.println(<span class="string">&quot;验证码为：&quot;</span>+rightCode);</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入验证码：&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">Code</span> <span class="operator">=</span> sc.next();</span><br><span class="line">                <span class="keyword">if</span>(Code.equals(rightCode))&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;验证码正确&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//集中验证账号和密码是否正确</span></span><br><span class="line">            <span class="comment">//封装思想的利用</span></span><br><span class="line">            <span class="comment">//把一些零散的数据，封装成一个对象</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">userInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(username,password,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> checkUsername(list,userInfo);</span><br><span class="line">            <span class="keyword">if</span>(result)&#123;</span><br><span class="line">                <span class="type">StudentSystem</span> <span class="variable">system</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StudentSystem</span>();</span><br><span class="line">                system.startStudentSystem();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录失败，账号或者密码错误，请重新输入&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//忘记密码功能</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">forgetPassword</span><span class="params">(ArrayList&lt;User&gt; list)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> contains(list, username);</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前用户：&quot;</span> + username + <span class="string">&quot;未注册&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入身份证号码&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">personID</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入手机号码&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phoneNumber</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//校验手机号身份证号码</span></span><br><span class="line">        <span class="comment">//跟用户名的是否一致</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> findIndex(list, username);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> list.get(index);</span><br><span class="line">        <span class="keyword">if</span> (!(user.getPassword().equalsIgnoreCase(personID) &amp;&amp; user.getPhoneNumber().equals(phoneNumber))) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;身份证号码或者电话号码输入错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String password;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入新的密码&quot;</span>);</span><br><span class="line">            password = sc.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;请再次输入密码&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">againPassword</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="keyword">if</span> (password.equals(againPassword)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;两次输入的密码一致&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;两次输入的密码不一致，请重新输入&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        user.setPassword(password);</span><br><span class="line">        System.out.println(<span class="string">&quot;密码修改成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验身份证电话号码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findIndex</span><span class="params">(ArrayList&lt;User&gt; list, String username)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="keyword">if</span>(user.getUsername().equals(username))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printList</span><span class="params">(ArrayList&lt;User&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名为：&quot;</span>+user.getUsername() + <span class="string">&quot;,&quot;</span> +<span class="string">&quot;密码为：：&quot;</span>+ user.getPassword() + <span class="string">&quot;,&quot;</span> + <span class="string">&quot;身份证号码为：&quot;</span>+ user.getPersonid() + <span class="string">&quot;,&quot;</span> +<span class="string">&quot;手机号码为：&quot;</span>+ user.getPhoneNumber());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验手机号</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkphoneNumber</span><span class="params">(String phoneNumber)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(phoneNumber.length() != <span class="number">11</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(phoneNumber.startsWith(<span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; phoneNumber.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> phoneNumber.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(!(c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验身份证号码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkpersonid</span><span class="params">(String personID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(personID.length() != <span class="number">18</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断首个字符是不是0，是的话返回true</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> personID.startsWith(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="comment">//如果0开头返回false</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; personID.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> personID.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(!(c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后一位可用是数字也可以是大小写的X</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">endChar</span> <span class="operator">=</span> personID.charAt(personID.length() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(!(endChar &gt;= <span class="string">&#x27;0&#x27;</span>) &amp;&amp; (endChar &lt;= <span class="string">&#x27;9&#x27;</span>) || (endChar == <span class="string">&#x27;x&#x27;</span>) || (endChar == <span class="string">&#x27;X&#x27;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验用户名是否唯一</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(ArrayList&lt;User&gt; list, String username)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="comment">//获取集合中的每一个对象中的索引</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="type">String</span> <span class="variable">rightUsername</span> <span class="operator">=</span> user.getUsername();</span><br><span class="line">            <span class="keyword">if</span> (rightUsername.equals(username)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkusername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> username.length();</span><br><span class="line">        <span class="keyword">if</span> (len &lt; <span class="number">3</span> || len &gt; <span class="number">15</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; username.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> username.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (!((c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;z&#x27;</span>) || (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>) || (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; username.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> username.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> ((c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;z&#x27;</span>) || (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>)) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断用户输入的用户名密码跟集合中的用户名密码是否一致</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkUsername</span><span class="params">(ArrayList&lt;User&gt; list,User userInfo)</span> &#123;</span><br><span class="line">        <span class="comment">//遍历集合判断用户名密码是否存在</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="keyword">if</span>((user.getUsername().equals(userInfo.getUsername()) &amp;&amp; (user.getUsername().equals(userInfo.getUsername()))))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成一个验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//创建一个集合来添加所有的大小写字母</span></span><br><span class="line">        ArrayList&lt;Character&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">26</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//字符加数字会把字符变为对应的ASCII码然后再相加，前面在强转为字符</span></span><br><span class="line">            list.add((<span class="type">char</span>)(<span class="string">&#x27;a&#x27;</span> + i));</span><br><span class="line">            list.add((<span class="type">char</span>)(<span class="string">&#x27;A&#x27;</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用于字符拼接成字符串</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(list.size());</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> list.get(index);</span><br><span class="line">            <span class="comment">//把随机字符添加到sb当中</span></span><br><span class="line">            sb.append(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把一个随机数字添加到末尾</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);</span><br><span class="line">        sb.append(number);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//想要修改一个字符串</span></span><br><span class="line">        <span class="comment">//要想把字符要把字符串变成字符数组</span></span><br><span class="line">        <span class="type">char</span>[] arr = sb.toString().toCharArray();</span><br><span class="line">        <span class="comment">//拿着最后一个索引，跟随机索引指向的元素交换</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">randomIndex</span> <span class="operator">=</span> r.nextInt(arr.length);</span><br><span class="line">        <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> arr[randomIndex];</span><br><span class="line">        arr[randomIndex] = arr[arr.length - <span class="number">1</span>];</span><br><span class="line">        arr[arr.length - <span class="number">1</span>] = temp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><p>Student</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String id, String name, <span class="type">int</span> age, String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>StudentSystem</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.Deflater;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentSystem</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startStudentSystem</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;欢迎来到学生管理系统&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1:添加学生 2:删除学生 3:修改学生 4:查询学生 5:退出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你的选择:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">choose</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="keyword">switch</span> (choose)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    addStudent(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    deletStudent(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    updateStudent(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    queryStudent(list);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加学生</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; list)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入学生ID:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> checkID(list,id);</span><br><span class="line">            <span class="keyword">if</span>(!flag1)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;当前ID已存在，请重新输入ID&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                student.setId(id);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入学生姓名:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            student.setName(name);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入学生年龄:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">ages</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            student.setAge(ages);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入学生家庭住址:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            student.setAddress(address);</span><br><span class="line"></span><br><span class="line">            list.add(student);</span><br><span class="line">            System.out.println(<span class="string">&quot;学生添加成功&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除约束</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deletStudent</span><span class="params">(ArrayList&lt;Student&gt; list)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入需要删除的学生的id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> checkID(list,id);</span><br><span class="line">        <span class="keyword">if</span>(flag1)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前学生不存在&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">username</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="keyword">if</span>(id.equals(username.getId()))&#123;</span><br><span class="line">                list.remove(list.get(i));</span><br><span class="line">                System.out.println(<span class="string">&quot;学生信息删除成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updateStudent</span><span class="params">(ArrayList&lt;Student&gt; list)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入需要修改的学生的id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> checkID(list,id);</span><br><span class="line">        <span class="keyword">if</span>(flag1)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;需要修改的学生不存在&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="keyword">if</span>(id.equals(s.getId()))&#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入修改后的学生id&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ID</span> <span class="operator">=</span> sc.next();</span><br><span class="line">                s.setId(ID);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入修改后的学生姓名&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.next();</span><br><span class="line">                s.setName(name);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入修改后的学生年龄&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">ages</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                s.setAge(ages);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入修改后的家庭住址&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.next();</span><br><span class="line">                s.setAddress(address);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询学生</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">queryStudent</span><span class="params">(ArrayList&lt;Student&gt; list)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">if</span>(list.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前无学生信息，请添加后再查询&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;ID\t姓名\t年龄\t家庭住址\t&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">name</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            System.out.println(name.getId() + <span class="string">&quot;\t&quot;</span> + name.getName() + <span class="string">&quot;\t&quot;</span> + name.getAge() + <span class="string">&quot;\t&quot;</span> + name.getAddress() + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验ID是否存在</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkID</span><span class="params">(ArrayList&lt;Student&gt; list, String inputID)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">            <span class="comment">//获取集合中每一个对象的索引</span></span><br><span class="line">            <span class="type">Student</span> <span class="variable">nameID</span> <span class="operator">=</span> list.get(i);</span><br><span class="line">            <span class="comment">//获取对象中的ID</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">ID</span> <span class="operator">=</span> nameID.getId();</span><br><span class="line">            <span class="comment">//判断集合中的ID跟用户输入的是否一致</span></span><br><span class="line">            <span class="keyword">if</span>((ID.equals(inputID)))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVASE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞笔记(四)</title>
      <link href="/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E5%9B%9B)/"/>
      <url>/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞笔记-四"><a href="#漏洞笔记-四" class="headerlink" title="漏洞笔记(四)"></a>漏洞笔记(四)</h1><h2 id="外部实体引用payload"><a href="#外部实体引用payload" class="headerlink" title="外部实体引用payload"></a>外部实体引用payload</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml&gt; version = <span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY f <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///ect/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">x</span>&gt;</span><span class="symbol">&amp;f;</span><span class="tag">&lt;/<span class="name">x</span>&gt;</span></span><br></pre></td></tr></table></figure><p>外部实体引用可以支持http、file、ftp等协议</p><p>如果一个接口支持接收xml数据，且没有对xml数据做任何安全上的措施，就可能导致xxe漏洞</p><h3 id="PHP-simptexml-load-string-函数"><a href="#PHP-simptexml-load-string-函数" class="headerlink" title="PHP simptexml_load_string()函数"></a>PHP simptexml_load_string()函数</h3><p>函数转换形式良好的XML字符串为SimpleXMLElement对象</p><p>在PHP里面解析XML用的是libxml，其中在&gt;&#x3D; 2.9.0的版本中，默认的是禁止解析xml外部实体内容的</p><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致攻击者可以构造一个恶意的XML</p><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p><strong>SSRF(Server-Side Request Forgery:服务器端请求伪造)</strong></p><p>其形成的原因大都是由于服务端<strong>提供了从其他服务器应用获取数据的功能</strong>,但又没有对目标地址做严格过滤与限制</p><p>导致攻击者可以传入任意的地址来让后端服务器对其发起请求,并返回对该目标地址请求的数据</p><p>数据流:攻击者—–&gt;服务器—-&gt;目标地址</p><p>根据后台使用的函数的不同,对应的影响和利用方法又有不一样            </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP中下面函数的使用不当会导致SSRF:</span><br><span class="line">file_get_contents()</span><br><span class="line">fsockopen()</span><br><span class="line">curl_exec()</span><br><span class="line">           </span><br></pre></td></tr></table></figure><p>如果一定要通过后台服务器远程去对用户指定(“或者预埋在前端的请求”)的地址进行资源请求,<strong>则请做好目标地址的过滤</strong>。</p><h2 id="Weblogic漏洞"><a href="#Weblogic漏洞" class="headerlink" title="Weblogic漏洞"></a>Weblogic漏洞</h2><h3 id="Weblogic相关介绍"><a href="#Weblogic相关介绍" class="headerlink" title="Weblogic相关介绍"></a>Weblogic相关介绍</h3><p>基于JAVAEE架构的中间件，WebLogic是用于开发集成部署和管理的大型分布式Web应用</p><h3 id="Weblogic特征"><a href="#Weblogic特征" class="headerlink" title="Weblogic特征"></a>Weblogic特征</h3><ul><li>端口默认：7001</li><li>Web界面：Error 404–Not Found</li></ul><h3 id="Weblogic漏洞利用"><a href="#Weblogic漏洞利用" class="headerlink" title="Weblogic漏洞利用"></a>Weblogic漏洞利用</h3><h4 id="获取资产"><a href="#获取资产" class="headerlink" title="获取资产"></a>获取资产</h4><p>shodan fofa 钟馗之眼等</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;BEA-Weblogic-Server&quot;</span><br></pre></td></tr></table></figure><p>google hacking</p><p>inurl:漏洞地址</p><p>intitle：weblogic等</p><p>批量扫描脚本：WeblogicScan，github下载</p><h2 id="常见的中间件漏洞"><a href="#常见的中间件漏洞" class="headerlink" title="常见的中间件漏洞"></a>常见的中间件漏洞</h2><h3 id="IIS中间件漏洞"><a href="#IIS中间件漏洞" class="headerlink" title="IIS中间件漏洞"></a>IIS中间件漏洞</h3><h4 id="HTTPS-sys远程代码执行漏洞"><a href="#HTTPS-sys远程代码执行漏洞" class="headerlink" title="HTTPS.sys远程代码执行漏洞"></a>HTTPS.sys远程代码执行漏洞</h4><p>Http.sys是Microsoft Windows处理HTTP请求的内核驱动程序。HTTP.sys会错误解析某些特殊构造的HTTP请求，导致远程代码执行漏洞。成功利用此漏洞后，攻击者可在System帐户上下文中执行任意代码。由于此漏洞存在于内核驱动程序中，攻击者也可以远程导致操作系统蓝屏。此次受影响的系统中，Windows7、Windows8、WindowsServer 2008 R2和WindowsServer 2012所带的HTTP.sys驱动均存在一个远程代码执行漏洞，远程攻击者可以通过IIS7(或更高版本)服务将恶意的HTTP请求传递给HTTP.sys驱动，通过发送恶意的HTTP请求导致远程代码执行或操作系统蓝屏。</p><p>测试：</p><ul><li>通过服务器返回信息的特征</li><li>使用Metasploit漏洞利用</li></ul><h3 id="apachu"><a href="#apachu" class="headerlink" title="apachu"></a>apachu</h3><p>apache目录结构</p><ul><li>bin：存放常用命令工具，如httpd</li><li>cgi-bin：存放linux下常用命令，如xxx.sh</li><li>error：错误记录</li><li>htdocs：网站源码</li><li>icons：网站图标</li><li>manual：手册</li><li>modules：扩展模块</li></ul><h4 id="未知拓展名解析漏洞"><a href="#未知拓展名解析漏洞" class="headerlink" title="未知拓展名解析漏洞"></a>未知拓展名解析漏洞</h4><h5 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h5><p>Apache默认一个文件可以有多个以点分割的后缀，当最右边的后缀无法识别，则继续向左识别，直到识别到合法后缀才进行解析。那么哪些后缀Apache不认识？不在mime.types 里面的都不认识 （Multipurpose Internet Mail Extensions）</p><p>1、使用module模式与php结合的所有版本apache存在未知扩展名解析漏洞。</p><p>2、使用fastcgi模式与php结合的所有版本apache不存在此漏洞。</p><p>3、利用此漏洞时必须保证扩展名中至少带有一个.php，不然将默认作为txt&#x2F;html文档处理。</p>]]></content>
      
      
      <categories>
          
          <category> web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞笔记(三)</title>
      <link href="/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%B8%89)/"/>
      <url>/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞笔记-三"><a href="#漏洞笔记-三" class="headerlink" title="漏洞笔记(三)"></a>漏洞笔记(三)</h1><h2 id="越权漏洞"><a href="#越权漏洞" class="headerlink" title="越权漏洞"></a>越权漏洞</h2><h3 id="越权漏洞概述"><a href="#越权漏洞概述" class="headerlink" title="越权漏洞概述"></a>越权漏洞概述</h3><p>信息安全行业关于权限有两个常见的概念，一个叫越权，一个叫提权。提权指的是低权限的用户通过技术手段提升到高权限的用户。（权限一般是指计算机权限，提权是指从用户权限提升到管理员权限）。越权一般是指低权限用户进行高权限的操作或平级操作，越权漏洞出现的地方一般以网页、app为主。</p><p>越权漏洞是一种很常见的逻辑安全漏洞。是由于服务器端对客户提出的数据操作请求过分信任，忽略了对该用户操作权限的判定，导致修改相关参数就可以拥有了其他账户的增、删、查、改功能，从而导致越权漏洞。</p><p>像越权漏洞这种逻辑安全漏洞是参加工作以后我们的制胜法宝。<br>像SQL注入、XSS、CSRF、文件上传这类漏洞用企业级工具(比如awvs、绿盟科技公司的极光软件)可以测出来，但是逻辑安全漏洞则需要手动才能测出来，因为代码本身没问题，而是程序设计思路有问题。</p><h3 id="常见越权的方式"><a href="#常见越权的方式" class="headerlink" title="常见越权的方式"></a>常见越权的方式</h3><ul><li>1.通过修改GET传参来越权</li><li>2.修改POST传参进行越权</li><li>3.修改cookie传参进行越权<br>注意：但凡看到可能代表身份或者某些信息的传参，都可以去尝试修改看看有没有漏洞。</li></ul><h3 id="测试流程"><a href="#测试流程" class="headerlink" title="测试流程"></a>测试流程</h3><p>登录A用户时，正常更改或者是查看A用户信息，然后抓取数据包，将传参ID修改为其他用户，如果成功查看或者修改了同权限其他用户的信息就属于水平越权测试。（如果可以影响到高权限用户就是垂直越权）</p><p>测试过程中的传参ID参数需要自己检测（常见：uid&#x3D; id&#x3D; user&#x3D; 等）通常使用burp进行爆破传参（传参可能在GET、POST、COOKIE传参）</p><h3 id="常见越权漏洞——平行越权"><a href="#常见越权漏洞——平行越权" class="headerlink" title="常见越权漏洞——平行越权"></a>常见越权漏洞——平行越权</h3><p>A用户和B用户属于同一级别用户，蛋各自不能操作对方个人信息，A用户如果越权操作B用户的个人信息的情况被称为平行越权</p><h3 id="常见越权漏洞——垂直越权"><a href="#常见越权漏洞——垂直越权" class="headerlink" title="常见越权漏洞——垂直越权"></a>常见越权漏洞——垂直越权</h3><p>A用户权限高于B用户，B用户越权操作A用户的权限的情况被称为垂直越权</p><h2 id="PHP序列化"><a href="#PHP序列化" class="headerlink" title="PHP序列化"></a>PHP序列化</h2><h3 id="什么是序列化"><a href="#什么是序列化" class="headerlink" title="什么是序列化"></a>什么是序列化</h3><p>PHP通过serialize()函数将对象转换为可传输的字符串，这里的字符串可以放在session缓存、cookie等地方，作为用户登录或操作的凭证。序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Syclover</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$Vanzy</span> = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$Myth3em</span> = <span class="string">&#x27;handsome boy&#x27;</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$zzy</span> = <span class="string">&#x27;handsome too&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Syclover</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgimgimage-20220925170805963.png" alt="image-20220925170805963"></p><h3 id="什么是反序列化"><a href="#什么是反序列化" class="headerlink" title="什么是反序列化"></a>什么是反序列化</h3><p>反序列化就是通过unserialize()函数的字节流还原成对象，一般会放在服务端，对客户传入的序列化字符串进行解析</p><h3 id="反序列化漏洞成因"><a href="#反序列化漏洞成因" class="headerlink" title="反序列化漏洞成因"></a>反序列化漏洞成因</h3><p>当服务端存在能够进行反序列化操作的函数，且函数的参数是可控时，就可能造成反序列化漏洞，如果服务端存在一些可以触发的magic methods，且存在命令执行或文件包含&#x2F;写文件的函数，那么我们可以通过构造popchain来触发，达到Getshell或File Include的目的</p><h3 id="常见的PHP-magic-methods"><a href="#常见的PHP-magic-methods" class="headerlink" title="常见的PHP magic methods"></a>常见的PHP magic methods</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__construct()，类的构造函数,当对象被创建时调用</span><br><span class="line">__destruct()，类的析构函数，当对象被销毁时调用</span><br><span class="line">__call()，在对象中调用一个不可访问方法时调用</span><br><span class="line">__callStatic()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line">__get()，从不可访问的属性读取数据时调用</span><br><span class="line">__set()，设置一个类的成员变量时调用</span><br><span class="line">__isset()，当对不可访问属性调用isset()或empty()时调用</span><br><span class="line">__unset()，当对不可访问属性调用unset()时被调用。</span><br><span class="line">__sleep()，执行serialize()前时，先会调用这个函数</span><br><span class="line">__wakeup()，执行unserialize()前时，先会调用这个函数</span><br><span class="line">__toString()，类被当成字符串时使用时被调用（echo file_exists）</span><br><span class="line">__invoke()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line">__set_state()，调用var_export()导出类时，此静态方法会被调用。</span><br><span class="line">__clone()，当对象复制完成时调用</span><br><span class="line">__autoload()，尝试加载未定义的类</span><br><span class="line">__debugInfo()，打印所需调试信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h2><h3 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h3><p>XML被设计为传输和存储数据，XML文档结构包括XML声明、DTD文档类型定义(可选)、文档元素，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。XXE漏洞全称XMLExternal Entity Injection，即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。</p><h3 id="XML文档结构"><a href="#XML文档结构" class="headerlink" title="XML文档结构"></a>XML文档结构</h3><ul><li>XML文档必须有一个元素</li><li>XML元素必须有一个关闭标签</li><li>XML标签对大小写敏感</li><li>XML元素必须被正确的嵌套</li><li>XML属性值必须加引号</li></ul><h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>XML文档结构包含XML声明、DTD文档类型定义、文档元素。而DTD就是用来控制文档的一个格式规范的。下面中的DTD就定义了XML的根元素为note，然后根元素下面有一些子元素（to、from、heading、body），那么下面的文档元素就必须是这些元素</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span>//这一行是 XML 文档定义</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">note</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">note</span> (<span class="keyword">to</span>,<span class="keyword">from</span>,<span class="keyword">heading</span>,<span class="keyword">body</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">to</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">from</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">heading</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">body</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line">//以上是文档类型</span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>Dont forget the meeting<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br><span class="line">//以上是文档元素</span><br></pre></td></tr></table></figure><p>DTD：Document type Definition即文档类型定义，用来为XML文档定义语义约束</p><p>1、DTD内部声明</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><p>2、DTD外部引用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;外部DTD的URL&quot;&gt;</span><br></pre></td></tr></table></figure><p>3、引用公共DTD</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素名称 PUBUC &quot;DTD标识名&quot; &quot;公共DTD的URL&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞笔记(二)</title>
      <link href="/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%BA%8C)/"/>
      <url>/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞笔记-二"><a href="#漏洞笔记-二" class="headerlink" title="漏洞笔记(二)"></a>漏洞笔记(二)</h1><h2 id="远程命令、代码执行漏洞"><a href="#远程命令、代码执行漏洞" class="headerlink" title="远程命令、代码执行漏洞"></a>远程命令、代码执行漏洞</h2><p>RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。                    </p><h3 id="远程系统命令执行"><a href="#远程系统命令执行" class="headerlink" title="远程系统命令执行"></a>远程系统命令执行</h3><p>一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口<br>比如我们常见的路由器、防火墙、入侵检测等设备的web管理界面上<br>一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果。</p><p>而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交“意想不到”的命令，从而让后台进行执行，从而控制整个后台服务器，现在很多的甲方企业都开始实施自动化运维,大量的系统操作会通过”自动化运维平台”进行操作。</p><p>在这种平台上往往会出现远程系统命令执行的漏洞,不信的话现在就可以找你们运维部的系统测试一下,会有意想不到的”收获”-_- </p><h3 id="远程代码执行"><a href="#远程代码执行" class="headerlink" title="远程代码执行"></a>远程代码执行</h3><p>同样的道理,因为需求设计,后台有时候也会把用户的输入作为代码的一部分进行执行,也就造成了远程代码执行漏洞。不管是使用了代码执行的函数,还是使用了不安全的反序列化等等。                    </p><p>因此，如果需要给前端用户提供操作类的API接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。                                        </p><h2 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h2><p>1：随着网站的业务的需求，程序开发人员一般希望代码更加灵活，所以将被包含的文件设置为变量，用来进行动态调用，但是正是这种灵活性通过动态变量的方式引入需要包含的文件时，用户对这个变量可控而且服务端又没有做合理的校检或者校检被绕过就造成了文件包含漏洞。</p><p>经常见到的函数</p><p>1：include（）当前使用该函数包含文件时，只有代码执行到include（）函数时将文件包含起来，发生错误时给出一个警告，然后继续执行语句</p><p>2，include_once()功能和include（）相同，区别当重复调用一个文件时，程序只调用一次</p><p>3：reguire（）执行如果发生错误，函数会输出错误信息，并终止脚本的运行</p><p>4：require_once（）功能与require（）相同区别在于当重复调用一个文件时，程序只调用一次</p><p>5：nighcight_file(),show_source()函数对文件进行语法高亮显示，通常能看到源代码</p><p>6：readfile（），file_get_contents（）函数读取一个文件，并写入输出缓冲</p><p>7：fopen（），打开一个文件或者url</p><p>几乎所有的脚本语言中都提供文件包含的功能，但文件包含漏洞在php中居多，而在jsp\ASP\ASP.NETC 程序中非常少，甚至没有文件包含漏洞的存在。</p><h3 id="本地文件包含漏洞"><a href="#本地文件包含漏洞" class="headerlink" title="本地文件包含漏洞"></a>本地文件包含漏洞</h3><p>当被包含的文件在服务器本地时，就形成的本地文件包含漏洞</p><h3 id="远程文件包含漏洞"><a href="#远程文件包含漏洞" class="headerlink" title="远程文件包含漏洞"></a>远程文件包含漏洞</h3><p>本地文件包含和远程文件包含造成漏洞的原因是一样的，当php.ini 中的配置选项allow_url_fopen和allow_url_include为ON的话，则包含的文件可以是第三方服务器中的文件，这样就形成了远程文件包含漏洞。 </p><h3 id="文件包含漏洞之上传漏洞的利用"><a href="#文件包含漏洞之上传漏洞的利用" class="headerlink" title="文件包含漏洞之上传漏洞的利用"></a>文件包含漏洞之上传漏洞的利用</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ul><li>制作一个图片木马，通过文件上传漏洞上传</li><li>通过文件包含漏洞对该木马进行“包含”</li><li>获取执行结果</li></ul><h3 id="不安全的文件下载和上传（任意文件下载）"><a href="#不安全的文件下载和上传（任意文件下载）" class="headerlink" title="不安全的文件下载和上传（任意文件下载）"></a>不安全的文件下载和上传（任意文件下载）</h3><p>很多网站都会提供文件下载功能，即用户可以通过点击下载链接，下载到链接所对应的文件</p><p>但是，如果文件下载功能设计不当，则可能导致攻击者可以通过构造文件路径，从而获取到后台服务器上的其他的敏感文件（又称：任意文件下载）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">../../../../ect/password</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>因为业务功能需要，很多web站点都有文件上传的接口，比如：</p><p>1.注册时上传头像图片（比如jpg,png,gif等）</p><p>2.上传文件附件（doc，xls等）</p><p>而在后台开发时并没有对上传的文件功能进行安全考虑或者采用了有缺陷的措施，导致攻击者可以通过一些手段绕过安全措施从而上传一些恶意文件（如：一句话木马）</p><p>从而通过对该恶意文件的访问来控制整个web后台</p><h3 id="测试流程"><a href="#测试流程" class="headerlink" title="测试流程"></a>测试流程</h3><p>1、搜集可上传文件接口</p><p>需要手动在网站页面查找可以上传文件的接口，比如头像上传，附件上传，图片上传，模板上传等位置，并做好记录（重点检查位置：用户中心，会员中心，后台管理等）。</p><p>2、上传常规文件并进行抓包，分析可能存在的漏洞</p><p>通过上传符合要求的文件，抓取数据包，对数据包传输与返回的数据进行分析，手工修改传输包中的一些参数和数据，通过测试了解文件上传机制和检测项。</p><p>3、绕过检测机制，上传webshell文件</p><p>根据之前的测试，通过各种绕过技术将webshell文件上传到服务器中，并可以正常执行。这里需要注意的是，我们要了解服务器可以执行那类文件，一般可分为asp、PHP、jsp、aspx，asa等类型。</p><p>仅仅上传了jpg、txt等非可执行文件，是没办法直接利用的，可以配合文件包含进行利用</p><h4 id="前端绕过"><a href="#前端绕过" class="headerlink" title="前端绕过"></a>前端绕过</h4><p>删除：onchange&#x3D;”checkFileExt(this.value)”</p><h3 id="服务端绕过"><a href="#服务端绕过" class="headerlink" title="服务端绕过"></a>服务端绕过</h3><h4 id="MIME绕过"><a href="#MIME绕过" class="headerlink" title="MIME绕过"></a>MIME绕过</h4><p>MIME多用途互联网邮件扩展类型，是设定某种扩展名的文件用一种应用程序来打开的方式类型，该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开，多用于指定一些客户端自定义文件名，以及一些媒体文件打开方式</p><p>每个MIME类型由两部分组成，前面是数据的大类型，例如：声音audio、图像image等，后面定义具体的种类。常见的MIME类型。</p><p>比如：</p><p>超文本标记语言：.html、text、html</p><p>普通文本：text、TXT、plain</p><p>PRT文本：rtf、appliction、</p><p>GIF图像：gif</p><p>JPEG图形：ipeg、jpg</p><p>抓包修改识别出来的文件名</p><h4 id="getimagesize-类型验证"><a href="#getimagesize-类型验证" class="headerlink" title="getimagesize()类型验证"></a>getimagesize()类型验证</h4><p>getimagesize()返回结果中有文件大小和文件类型，如果这个来获取类型，从而判断是否有图片的话，会存在问题</p><p>是否可以绕过呢？可以，因为图片头可以被伪渣</p><p>图片木马的制作：</p><p>方法1：直接伪渣头部GIF89A</p><p>CMD：copy &#x2F;b test.png + muma.php ccc.png</p><p>方法2：使用GIMP（开源图片修改软件），通过增加备注，写入执行命令</p>]]></content>
      
      
      <categories>
          
          <category> web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞笔记(一)</title>
      <link href="/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%B8%80)/"/>
      <url>/2022/10/22/%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞笔记-一"><a href="#漏洞笔记-一" class="headerlink" title="漏洞笔记(一)"></a>漏洞笔记(一)</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="什么是信息收集"><a href="#什么是信息收集" class="headerlink" title="什么是信息收集"></a>什么是信息收集</h3><p>信息收集是值通过各种方式获取所需要的信息，以便我们在后续的渗透过程中更好的进行，比如目标站点IP、中间件、脚本语言、端口、邮箱等等，信息收集包含资产收集但不限于资产收集</p><h3 id="信息收集的意义"><a href="#信息收集的意义" class="headerlink" title="信息收集的意义"></a>信息收集的意义</h3><ul><li><p>信息收集是渗透测试成功的保障</p></li><li><p>更多的暴露面</p></li><li><p>更大的可能性</p></li></ul><h3 id="信息收集的分类"><a href="#信息收集的分类" class="headerlink" title="信息收集的分类"></a>信息收集的分类</h3><ul><li>主动信息收集<ul><li>通过直接访问网站在网站进行操作、对网站进行扫描等，这种是有网络流经过目标服务器的信息收集方式</li></ul></li><li>被动信息收集<ul><li>基于公开的渠道，比如搜索引擎等，在不与目标直接交互的情况下获取信息，并且尽量避免留下痕迹</li></ul></li></ul><h3 id="收集那些信息"><a href="#收集那些信息" class="headerlink" title="收集那些信息"></a>收集那些信息</h3><ul><li>服务器信息：端口、服务、真实IP</li><li>网站信息：网站架构（操作系统、中间件、数据库、编程语言）、指纹信息、WAF、敏感目录、敏感文件、源码泄露、旁站查询、C段查询</li><li>域名信息：whois、备案信息、子域名</li><li>人员信息：姓名、职务、生日、联络方式、邮件地址</li></ul><h3 id="子域名信息收集"><a href="#子域名信息收集" class="headerlink" title="子域名信息收集"></a>子域名信息收集</h3><h4 id="子域名介绍"><a href="#子域名介绍" class="headerlink" title="子域名介绍"></a>子域名介绍</h4><p>子域名指二级域名，二级域名是顶级域名（一级域名）的下一级</p><p>比如mail.heetian.com和bbs.beetian.com是heetian.com的 子域，而heetian.com则是顶级域名.com的子域名</p><h3 id="网站指纹识别"><a href="#网站指纹识别" class="headerlink" title="网站指纹识别"></a>网站指纹识别</h3><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><ul><li>ping判断：windows的TTL值一般为128，Linux则为64.TTL大于100的一般为windowns，几十的一般为Linux</li><li>nmap -O 参数</li><li>windows大小写不敏感，Linux则区分大小写</li></ul><h4 id="CMS识别"><a href="#CMS识别" class="headerlink" title="CMS识别"></a>CMS识别</h4><p>常见CMS：dedecms（织梦）、Discuz、phpcms等</p><ul><li>在线识别工具：<a href="http://whatweb.bugscaner.com/">http://whatweb.bugscaner.com/</a></li></ul><h3 id="敏感文件及目录探测"><a href="#敏感文件及目录探测" class="headerlink" title="敏感文件及目录探测"></a>敏感文件及目录探测</h3><h4 id="敏感文件、目录"><a href="#敏感文件、目录" class="headerlink" title="敏感文件、目录"></a>敏感文件、目录</h4><p>github、git、SVN、.DS_Store、.hg、.bzr、cvs、WEB-INF、备份文件</p><ul><li>github泄露：开发人员将代码上传到网站。在上传的时候，没有删除重要的一些信息。如邮箱信息，svn信息，内部账号等，数据库连接信息，服务器配置信息等</li></ul><h4 id="网站waf识别"><a href="#网站waf识别" class="headerlink" title="网站waf识别"></a>网站waf识别</h4><p>waf00f：github下载</p><p>nmap -p 80,443 –script http-waf-detect ip</p><p>nmap -p 80,443 –script http-waf-fingerprint ip</p><h2 id="暴力破解漏洞解析"><a href="#暴力破解漏洞解析" class="headerlink" title="暴力破解漏洞解析"></a>暴力破解漏洞解析</h2><h3 id="暴力破解漏洞概述"><a href="#暴力破解漏洞概述" class="headerlink" title="暴力破解漏洞概述"></a>暴力破解漏洞概述</h3><p>如果一个网站没有对登录接口实施防暴力破解的措施，或实施了不合理的措施。则称该网站存在暴力破解漏洞</p><ul><li>是否要求用户设置了复杂的密码</li><li>是否每次认证都使用安全的验证码</li><li>是否尝试登录的行为进行判断和限制</li><li>是否在必要的情况下采用了双因素认证</li></ul><h3 id="暴力破解漏洞测试流程"><a href="#暴力破解漏洞测试流程" class="headerlink" title="暴力破解漏洞测试流程"></a>暴力破解漏洞测试流程</h3><p>确认登录接口的脆弱性</p><p>确认目标是否存在暴力破解的漏洞</p><p>比如：尝试登录——抓包——观察验证元素和response信息，判断是否存在被暴力破解的可能</p><p>技巧：</p><p>如果爆破的是管理后台</p><p>账号是admin&#x2F;adminstrator&#x2F;root的几率比较高</p><p>可以使用三个账号加一个密码来确认账号</p><h3 id="暴力破解的绕过和防范"><a href="#暴力破解的绕过和防范" class="headerlink" title="暴力破解的绕过和防范"></a>暴力破解的绕过和防范</h3><ul><li><p>暴力破解之不安全的验证码分析</p><ul><li>on client</li><li>on server</li></ul></li><li><p>Token可以防暴力破解码</p></li><li><p>暴力破解常见的防范措施</p></li></ul><p>我们一般用验证码来做什么？</p><ul><li>登录暴力破解</li><li>防止机器恶意注册</li></ul><p>验证码的认证流程</p><ul><li>客户端request登录页面，后台生成验证码<ul><li>后台使用算法生成验证码，并将图片response给客户端</li><li>同时将算法生成的值全局赋值存到SESSION中</li></ul></li><li>校验验证码<ul><li>客户端将认证信息和验证码一同提交</li><li>后台对提交的验证码与SESSION里面的进行比较</li></ul></li><li>客户端重新刷新页面，再次生成新的验证码<ul><li>验证码算法中一般包含随机函数，所以每次刷新验证码都会改变</li></ul></li></ul><h3 id="不安全的验证码-on-client常见问题"><a href="#不安全的验证码-on-client常见问题" class="headerlink" title="不安全的验证码-on client常见问题"></a>不安全的验证码-on client常见问题</h3><ul><li>使用前端js实现验证码（纸老虎）</li><li>将验证码在cookie中泄露，任意被获取</li><li>将验证码在前端源代码中泄露，容易被获取</li></ul><h3 id="不安全的验证码-on-server常见问题"><a href="#不安全的验证码-on-server常见问题" class="headerlink" title="不安全的验证码-on server常见问题"></a>不安全的验证码-on server常见问题</h3><ul><li>验证码在后台不过期，导致可以长期被使用</li><li>验证码校验不严格格，逻辑出现问题</li><li>验证码设计的太过简单和有规律，容易被猜解</li></ul><h2 id="XSS跨站脚本漏洞"><a href="#XSS跨站脚本漏洞" class="headerlink" title="XSS跨站脚本漏洞"></a>XSS跨站脚本漏洞</h2><h3 id="跨站脚本漏洞概述"><a href="#跨站脚本漏洞概述" class="headerlink" title="跨站脚本漏洞概述"></a>跨站脚本漏洞概述</h3><ul><li>XSS漏洞一致被评估为web漏洞中危害比较大的漏洞，在OWASP TOP10的排名中一直属于前三位</li><li>XSS是发生在web前端的漏洞，所以其危害的对象也主要是前端用户</li><li>XSS老可以用来进行钓鱼攻击、前端JS挖矿、用户cookie获取。甚至可以结合浏览器自身的老对用户主机进行远端控制等</li></ul><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-09-08_19-45-17.png"></p><h3 id="跨站脚本漏洞常见类型"><a href="#跨站脚本漏洞常见类型" class="headerlink" title="跨站脚本漏洞常见类型"></a>跨站脚本漏洞常见类型</h3><p>危害：存储型 &gt; 反射型 &gt; DOM型</p><ul><li>存储型：交互的数据会被存在数据库里面，永久性存储，一般出现在留言板，注册页面等</li><li>反射型：交互的数据一般不会被存储在数据库里面，一次性，一般出现在查询类页面等</li><li>DOM型：不与后台服务器数据交互，是一种通过DOM操作前端代码输出的时候产生的问题，一次性也属于反射型</li></ul><h3 id="XSS漏洞形成的原因"><a href="#XSS漏洞形成的原因" class="headerlink" title="XSS漏洞形成的原因"></a>XSS漏洞形成的原因</h3><p>形成XSS漏洞的主要原因是程序对输入和输出的控制不够严格，导致精心构造的脚本输入后，再输到前端时被浏览器当作有效代码执行。</p><h3 id="跨站脚本漏洞测试流程"><a href="#跨站脚本漏洞测试流程" class="headerlink" title="跨站脚本漏洞测试流程"></a>跨站脚本漏洞测试流程</h3><ul><li>在目标站点上找到输入点，比如查询j接口，留言板等</li><li>输入一组“特殊字符 + 唯一识别字符”，点击提交后，查看返回的源码，是否有做对应的处理</li><li>通过搜索定位到唯一字符，结合唯一字符前后语法确认是否可以构造执行js的条件（构造闭合）</li><li>提交构造的脚本代码（以及各种绕过姿势），看是否可以成功执行，如果可以成功执行则证明存在XSS漏洞</li></ul><p>TISP：</p><ul><li>一般查询接口容易出现反射型XSS，留言板容易出现存储型XSS</li><li>由于后台可能存在过滤措施，构造的script可能会被过滤掉，而无法生效，或者环境限制了执行（浏览器）</li><li>通过不同变化的script，尝试绕过后台过滤机制</li></ul><p>GET型XSS漏洞可以直接利用URL地址</p><h3 id="XSS绕过"><a href="#XSS绕过" class="headerlink" title="XSS绕过"></a>XSS绕过</h3><ul><li><p>前端绕过，直接抓包重放，或者修改前端代码</p></li><li><p>大小写，比如：<SCRIPT>aLeRT(111)<sCript></p></li><li><p>拼凑：<scri<script>pt>alert(111)</script>scri</script>pt&gt;</p></li><li><p>使用注释进行干扰：&lt;scri<!--text-->pt&gt;alert(111)&lt;&#x2F;sc<!--text-->ript&gt;</p></li><li><p>编码</p></li><li><p>绕过herf：<a href = javascript:alert(111>javascript:alert(111))</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的算法</title>
      <link href="/2022/10/13/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/"/>
      <url>/2022/10/13/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="常见算法"><a href="#常见算法" class="headerlink" title="常见算法"></a>常见算法</h1><h2 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h2><h3 id="基本查找"><a href="#基本查找" class="headerlink" title="基本查找"></a>基本查找</h3><p>基本查找&#x2F;顺序查找</p><p>核心：从0索引开始挨个查找</p><p>需求：定义一个方法利用基本查找，查询某个元素是否存在</p><p>数据如下：{131,,127,147,81,103,23,7,79}</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">131</span>,<span class="number">127</span>,<span class="number">147</span>,<span class="number">81</span>,<span class="number">103</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">79</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">81</span>;</span><br><span class="line">        System.out.println(basicSearch(arr,number));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要的参数</span></span><br><span class="line">    <span class="comment">//1.数组</span></span><br><span class="line">    <span class="comment">//2.要查找的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">basicSearch</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == number)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分查找-x2F-折半查找"><a href="#二分查找-x2F-折半查找" class="headerlink" title="二分查找&#x2F;折半查找"></a>二分查找&#x2F;折半查找</h3><p>前提条件：数组中的数据必须是有序的</p><p>核心逻辑：每次排除一半的查找范围</p><p>1.min和max表示当前要查找的范围</p><p>2.mid是在min和max中间的</p><p>3.如果要查找的元素在mid的左边，缩小范围时，min不变，max等于mid减1</p><p>4.如果要查找的元素在mid的右边，缩小范围时，max不变，min等于mid加1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">7</span>,<span class="number">23</span>,<span class="number">79</span>,<span class="number">81</span>,<span class="number">103</span>,<span class="number">127</span>,<span class="number">131</span>,<span class="number">147</span>&#125;;</span><br><span class="line">        System.out.println(binarySeach(arr,<span class="number">81</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySeach</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用循环查找需要查找的数据</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; max) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//找到中间的位置</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (min + max) / <span class="number">2</span>;</span><br><span class="line">            <span class="comment">//拿着mid的数据在数组中进行比较</span></span><br><span class="line">            <span class="keyword">if</span> (arr[mid] &gt; number) &#123;</span><br><span class="line">                <span class="comment">//大于</span></span><br><span class="line">                max = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; number) &#123;</span><br><span class="line">                <span class="comment">//小于</span></span><br><span class="line">                min = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分查找改进（插值查找）"><a href="#二分查找改进（插值查找）" class="headerlink" title="二分查找改进（插值查找）"></a>二分查找改进（插值查找）</h4><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-19_19-56-52.png"></p><h3 id="分块查找"><a href="#分块查找" class="headerlink" title="分块查找"></a>分块查找</h3><p>分块原则1：前一块中的最大一块，小于后一块中所有的数据（块内无序，块间有序）</p><p>分块原则2：块的数量一般等于数字的个数开根号。比如：16个数字一般分为4块左右</p><p>核心思路：先确定要查找的元素在哪一块，然后在块内挨个查找</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-22_22-40-33.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//分块查找</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">16</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">12</span>, <span class="number">21</span>,<span class="number">18</span>,</span><br><span class="line">                    <span class="number">32</span>,<span class="number">23</span>,<span class="number">37</span>,<span class="number">26</span>,<span class="number">45</span>,<span class="number">34</span>,</span><br><span class="line">                    <span class="number">50</span>,<span class="number">48</span>,<span class="number">61</span>,<span class="number">52</span>,<span class="number">73</span>,<span class="number">66</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建三个块的对象</span></span><br><span class="line">        <span class="type">Block</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">21</span>,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">45</span>,<span class="number">6</span>,<span class="number">11</span>);</span><br><span class="line">        <span class="type">Block</span> <span class="variable">b3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Block</span>(<span class="number">73</span>,<span class="number">12</span>,<span class="number">17</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义数组管理者三个对象（索引表）</span></span><br><span class="line">        Block[] blockArr = &#123;b1,b2,b3&#125;;</span><br><span class="line">        <span class="comment">//定义一个需要查找的数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">37</span>;</span><br><span class="line">        <span class="comment">//调用方法，传递索引表，数组，要查找的元素</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> getIndex(blockArr,arr,number);</span><br><span class="line">        <span class="comment">//打印</span></span><br><span class="line">        System.out.println(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(Block[] blockArr, <span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="comment">//1.确定number在那一块</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">indexBlock</span> <span class="operator">=</span> findIndexBlock(blockArr,number);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(indexBlock == -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取这一块的开始索引，结束索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startIndex</span> <span class="operator">=</span> blockArr[indexBlock].getStartIndex();</span><br><span class="line">        <span class="type">int</span> <span class="variable">endIndex</span> <span class="operator">=</span> blockArr[indexBlock].getEndIndex();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex;i &lt;= endIndex;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == number)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法用来确定number在哪个块中</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findIndexBlock</span><span class="params">(Block[] blockArr,<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="comment">//Block b1 = new Block(21,0,5);</span></span><br><span class="line">        <span class="comment">//Block b2 = new Block(45,6,11);</span></span><br><span class="line">        <span class="comment">//Block b3 = new Block(73,12,17);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从0索引开始遍历blockArr，如果number小于max，那么就表示number就在这个表中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; blockArr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(number &lt;= blockArr[i].getMax())&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Block</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> max;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> startIndex;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> endIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Block</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Block</span><span class="params">(<span class="type">int</span> max, <span class="type">int</span> startIndex, <span class="type">int</span> endIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.max = max;</span><br><span class="line">        <span class="built_in">this</span>.startIndex = startIndex;</span><br><span class="line">        <span class="built_in">this</span>.endIndex = endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMax</span><span class="params">(<span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.max = max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStartIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStartIndex</span><span class="params">(<span class="type">int</span> startIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.startIndex = startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEndIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEndIndex</span><span class="params">(<span class="type">int</span> endIndex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.endIndex = endIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>扩展的分块查找（无规律的数据）</p><p><img src="https://blog-1258155859.cos.ap-guangzhou.myqcloud.com/imgSnipaste_2022-08-22_23-11-35.png"></p><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p>冒泡排序：相邻的数据两两比较，小的放前面，大的放后面</p><p>1.第一轮循环结束，最大值已经找到，在数组的最右边</p><p>2.第二轮循环只要在剩下的元素找最大值就可以了</p><p>3.如果数组中有n个数据，总共我们只要执行n-1轮代码就可以了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">D</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length- <span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>选择排序：从0索引开始，拿着每一个索引上的元素跟后面的元素依次比较，小的放前面，大的放后面，以此类推</p><p>1.从0索引开始，跟后面的元素一一比较</p><p>2.小的放前面，大的放后面</p><p>3.第一轮循环结束后，最小的数据已经确定</p><p>4.第二轮循环从1索引开始以此类推</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">E</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i] &gt; arr[j])&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>插入排序：将0索引的元素到N索引的元素看做是有序的，把N+1索引的元素放到最后一个当成是无序的。遍历无序的数据，将遍历到的元素插入到有序序列中适当的位置，如遇到相同的数据，插在后面</p><p>N的</p><p>范围：0~最大索引</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">F</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">44</span>,<span class="number">38</span>,<span class="number">5</span>,<span class="number">47</span>,<span class="number">15</span>,<span class="number">36</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">2</span>,<span class="number">46</span>,<span class="number">4</span>,<span class="number">19</span>,<span class="number">50</span>,<span class="number">48</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.找到无序的那一组是从哪个索引开始的</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startIndex</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] &gt; arr[i + <span class="number">1</span>])&#123;</span><br><span class="line">                startIndex = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历从startIndex开始到最后一个元素，依次得到无序数据中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//记录当前要插入数据的索引</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; arr[j] &lt; arr[j - <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">                arr[j - <span class="number">1</span>] = temp;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h3><p>递归指的是方法中调用方法本身的现象</p><p>递归方法的作用：把一个赋值的问题层层转化为一个与原问题相似的规模较小的问题来求解</p><p>书写递归的两个核心：</p><ul><li>找出口：什么时候不再调用方法</li><li>找规则：如何把大问题变成规模较小的问题</li></ul><p>递归求1~100之间的和</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">G</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getSum(<span class="number">100</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> number + getSum(number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>递归求阶乘</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">H</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getFactorialRecursion(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getFactorialRecursion</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> number * getFactorialRecursion(number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>第一轮：把0索引的数字作为基准数，确定基准数在数组中正确的位置。比基准数小的全部在左边，比基准数大的全部在右边</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">I</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">6</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line">        quickSort(arr,<span class="number">0</span>,arr.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//参数一：需要排序的数组</span></span><br><span class="line">    <span class="comment">//参数二、需要排序数组的起始索引</span></span><br><span class="line">    <span class="comment">//参数三、需要排序数组的结束索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        <span class="comment">//定义两个变量记录要查找的范围</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> i + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> j;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归的出口</span></span><br><span class="line">        <span class="keyword">if</span>(start &gt; end)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//记录基准数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">baseNumber</span> <span class="operator">=</span> arr[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用循环找到要交换的数字</span></span><br><span class="line">        <span class="keyword">while</span>(start != end)&#123;</span><br><span class="line">            <span class="comment">//利用end，从后往前找，找比基准数小的数字</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(end &lt;= start || arr[end] &lt; baseNumber)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                end--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//利用start，从前往后找，找比基准数大的数字</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(end &lt;= start || arr[start] &gt; baseNumber)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                start++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//把end和start指向的元素进行交换</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当start和end指向同一个元素的时候，那么上面的循环就会结束</span></span><br><span class="line">        <span class="comment">//表示已经找到了基准数在数组中应存入的位置</span></span><br><span class="line">        <span class="comment">//基准数归位</span></span><br><span class="line">        <span class="comment">//就是拿着这个范围中的第一个数字，跟start指向的元素进行交换</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[start];</span><br><span class="line">        arr[start] = temp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//确定6左边的范围，重复刚刚的事情</span></span><br><span class="line">        quickSort(arr,i,start - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//确定6右边的范围，重复刚刚的事情</span></span><br><span class="line">        quickSort(arr,start + <span class="number">1</span>,j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1.冒泡排序</p><ul><li>相邻的元素两两比较，小的放前面，大的放后面</li></ul><p>2.选择排序</p><ul><li>从0索引开始，拿着每一个索引上的元素跟后面的元素依次比较，小的放前面，大的放后面</li></ul><p>3.插入排序</p><ul><li>将数组分为有序和无序两组，遍历无序数据，将元素插入有序序列中即可</li></ul><p>4.快速排序</p><ul><li>将排序范围中的第一个数字作为基准数，再定义两个变量start和end</li><li>start从前往后找比基准数大的，end从后往前找比基准数小的</li><li>找到之后交换start和end指向的元素，并稀罕这一过程，直到start个end处于同一个位置，该位置是基准数应存入的位置，再让基准数归位</li><li>归位后的效果：基准数左边的，比基准数小，基准数右边的，比基准数大</li></ul><h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><h2 id="不死神兔"><a href="#不死神兔" class="headerlink" title="不死神兔"></a>不死神兔</h2><p>有一个很有名的数学逻辑题叫做不死神兔问题，有一对兔子，从出生后第三个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一队兔子，假如兔子都不死，问第十二个月的兔子对数为多少</p><p>特点：从第三个数据开始，是前两个数据的和（斐波那契数列）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">one</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">12</span>];</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr[i] = arr[i - <span class="number">1</span>] + arr[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arr[<span class="number">11</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="猴吃桃子"><a href="#猴吃桃子" class="headerlink" title="猴吃桃子"></a>猴吃桃子</h2><p>有一堆桃子，第一只猴子吃了其中的一半，并多吃了一个，以后每天猴子都吃当前剩下来的一半，然后再多吃一个，第十天的时候（还没吃），发现只剩下一个桃子了，请问，最初总共多少个桃子</p><p>day10： 1</p><p>day9： （day10 + 1） *  2 &#x3D; 4</p><p>day8：（day9 + 1）* 2 &#x3D; 10</p><p>出口：day &#x3D;&#x3D; 10 剩下1</p><p>规律：每一天的桃子数量都是最后一天数量加1乘2</p><p>反向递归</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> heima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">one</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getCount(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">(<span class="type">int</span> day)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(day &lt;= <span class="number">0</span> || day &gt;= <span class="number">11</span>)&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;当前时间错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//递归出口</span></span><br><span class="line">        <span class="keyword">if</span>(day == <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (getCount(day + <span class="number">1</span>) + <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
